apiVersion: v1
kind: Namespace
metadata:
  name: opctl
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: opctl
  namespace: opctl
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name: opctl
  namespace: opctl
rules:
  - apiGroups: [""]
    resources: ["pods", "pods/log", "pods/status"]
    verbs: ["create", "get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: opctl_opctl
  namespace: opctl
roleRef:
  kind: Role
  name: opctl
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: opctl
    namespace: opctl
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: opctl
  # No namespace, PVs are global
spec:
  accessModes:
    - ReadWriteMany
  capacity:
    storage: 1Mi
  mountOptions:
    - rsize=1048576
    - wsize=1048576
    - hard
    - timeo=600
    - retrans=2
    - noresvport
  persistentVolumeReclaimPolicy: Retain
  nfs:
    server: 10.34.56.61
    path: /
  claimRef:
    name: opctl
    namespace: opctl
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: opctl
  namespace: opctl
spec:
  storageClassName: ""
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Mi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: opctl
  namespace: opctl
spec:
  replicas: 1
  selector:
    matchLabels:
      name: opctl
  serviceName: opctl
  template:
    metadata:
      labels:
        name: opctl
    spec:
      serviceAccountName: opctl
      containers:
        - name: opctl
          image: "opctl/opctl:0.1.44-dood"
          imagePullPolicy: Always
          command:
            - sh
            - -ce
            - rm -rf /root/opctl/** && opctl node create
          resources:
            limits:
              cpu: 500m
              memory: 1024Mi
            requests:
              cpu: 100m
              memory: 150Mi
          volumeMounts:
            - name: opctl
              mountPath: "/root/opctl"
          env:
            - name: OPCTL_CONTAINER_RUNTIME
              value: "k8s"
      volumes:
        - name: opctl
          persistentVolumeClaim:
            claimName: opctl