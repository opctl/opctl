openapi: 3.0.0
servers:
  - url: 'localhost:42224'
    variables: {}
    description: Local opctl node bound to default port
info:
  version: 0.1.26
  title: Opctl ReST API
paths:
  /auths/adds:
    post:
      summary: Adds auth for an OCI image registry
      tags:
        - auths
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/addAuthReq"
        required: true
      responses:
        "204":
          description: HTTP/1.1 ["No Content" response status code](https://tools.ietf.org/html/rfc7231#section-6.3.5)
        "400":
          $ref: "#/components/responses/badRequest"
        "500":
          $ref: "#/components/responses/internalServerError"
  /events/stream:
    get:
      summary: Get an event stream
      description: The connection will be upgraded to use the websocket protocol.
      parameters:
        - name: ack
          in: query
          required: false
          description:
            When specified, client MUST ack (empty reply) each message before server will send another.
            This enables the client to apply back pressure to the stream
          schema:
            type: boolean
          allowEmptyValue: true
        - name: since
          in: query
          description: Filters events to those occurring on/after the provided instant
          required: false
          schema:
            type: string
            format: date-time
          explode: false
        - name: roots
          in: query
          description: Filters events to those w/ the provided root op ids
          required: false
          schema:
            type: array
            items:
              type: string
          explode: false
      tags:
        - events
      responses:
        "101":
          description: HTTP/1.1 ["Switching Protocols" response status code](https://tools.ietf.org/html/rfc7231#section-6.2.2)
          headers:
            Upgrade:
              schema:
                type: string
                enum:
                  - websocket
            Connection:
              schema:
                type: string
                enum:
                  - Upgrade
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/event"
        "500":
          $ref: "#/components/responses/internalServerError"
        "400":
          $ref: "#/components/responses/badRequest"
  /liveness:
    get:
      summary: Get liveness of node
      tags:
        - liveness
      responses:
        "200":
          description: HTTP/1.1 ["OK" response status code](https://tools.ietf.org/html/rfc7231#section-6.3.1)
        "500":
          $ref: "#/components/responses/internalServerError"
  /ops/starts:
    post:
      summary: Starts an op
      tags:
        - ops
      responses:
        "201":
          description: HTTP/1.1 ["Created" response status code](https://tools.ietf.org/html/rfc7231#section-6.3.2)
          content:
            text/plain:
              schema:
                description: "The id of the [started] op"
                type: string
        "400":
          $ref: "#/components/responses/badRequest"
        "500":
          $ref: "#/components/responses/internalServerError"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/startOpReq"
        required: true
  /ops/kills:
    post:
      summary: Kills an op
      tags:
        - ops
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/killOpReq"
        required: true
      responses:
        "204":
          description: HTTP/1.1 ["No Content" response status code](https://tools.ietf.org/html/rfc7231#section-6.3.5)
        "400":
          $ref: "#/components/responses/badRequest"
        "500":
          $ref: "#/components/responses/internalServerError"
  "/data/{ref}":
    get:
      summary: Gets data
      tags:
        - data
      parameters:
        - name: ref
          in: path
          required: true
          schema:
            type: string
        - name: path
          in: query
          required: false
          schema:
            type: string
        - name: Range
          description: HTTP/1.1 ["Range" header field](https://tools.ietf.org/html/rfc7233#section-3.1)
          in: header
          required: false
          schema:
            type: string
      responses:
        "200":
          description: HTTP/1.1 ["OK" response status code](https://tools.ietf.org/html/rfc7231#section-6.3.1)
          headers:
            Accept-Ranges:
              description: HTTP/1.1 ["Accept-Ranges" header field](https://tools.ietf.org/html/rfc7233#section-2.3)
              schema:
                type: string
                enum:
                  - bytes
            Content-Length:
              description: HTTP/1.1 ["Content-Length" header field](https://tools.ietf.org/html/rfc7230#section-3.3.2)
              schema:
                type: integer
          content:
            application/octet-stream: {}
            multipart/byteranges: {}
            text/plain: {}
            application/json: {}
            application/vnd.opspec.0.1.6.dir+json:
              schema:
                items:
                  properties:
                    path:
                      description: absolute path within dir
                      type: string
                    size:
                      type: integer
                    mode:
                      description: golang [FileMode](https://golang.org/pkg/os/#FileMode)
                      type: integer
                type: array
        "206":
          description: HTTP/1.1 ["Partial Content" response status code](https://tools.ietf.org/html/rfc7233#section-4.1)
          headers:
            Content-Length:
              description: HTTP/1.1 ["Content-Length" header field](https://tools.ietf.org/html/rfc7230#section-3.3.2)
              schema:
                type: integer
            Content-Range:
              description: HTTP/1.1 ["Content-Range" header field](https://tools.ietf.org/html/rfc7233#section-4.2)
              schema:
                type: string
          content:
            application/octet-stream:
              schema:
                type: string
            multipart/byteranges:
              schema:
                type: string
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/notFound"
        "416":
          $ref: "#/components/responses/rangeNotSatisfiable"
        "500":
          $ref: "#/components/responses/internalServerError"
    head:
      summary: Same as GET operation but only returns headers
      tags:
        - data
      parameters:
        - name: ref
          in: path
          required: true
          schema:
            type: string
        - name: path
          in: query
          required: false
          schema:
            type: string
        - name: Range
          description: HTTP/1.1 ["Range" header field](https://tools.ietf.org/html/rfc7233#section-3.1)
          in: header
          required: false
          schema:
            type: string
      responses:
        "200":
          description: HTTP/1.1 ["OK" response status code](https://tools.ietf.org/html/rfc7231#section-6.3.1)
          headers:
            Accept-Ranges:
              description: HTTP/1.1 ["Accept-Ranges" header field](https://tools.ietf.org/html/rfc7233#section-2.3)
              schema:
                type: string
                enum:
                  - bytes
            Content-Length:
              description: HTTP/1.1 ["Content-Length" header field](https://tools.ietf.org/html/rfc7230#section-3.3.2)
              schema:
                type: integer
        "206":
          description: HTTP/1.1 ["Partial Content" response status code](https://tools.ietf.org/html/rfc7233#section-4.1)
          headers:
            Content-Length:
              description: HTTP/1.1 ["Content-Length" header field](https://tools.ietf.org/html/rfc7230#section-3.3.2)
              schema:
                type: integer
            Content-Range:
              description: HTTP/1.1 ["Content-Range" header field](https://tools.ietf.org/html/rfc7233#section-4.2)
              schema:
                type: string
          content:
            application/octet-stream:
              schema:
                type: string
            multipart/byteranges:
              schema:
                type: string
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/notFound"
        "416":
          $ref: "#/components/responses/rangeNotSatisfiable"
        "500":
          $ref: "#/components/responses/internalServerError"

components:
  responses:
    unauthorized:
      description: HTTP/1.1 ["Unauthorized" response status code](https://tools.ietf.org/html/rfc7235#section-3.1)
      headers:
        WWW-Authenticate:
          description: HTTP/1.1 ["WWW-Authenticate" header](https://tools.ietf.org/html/rfc7235#section-4.1)
          schema:
            type: string
    forbidden:
      description: HTTP/1.1 ["Forbidden" response status code](https://tools.ietf.org/html/rfc7231#section-6.5.3)
    internalServerError:
      description: HTTP/1.1 ["Internal Server Error" response status code](https://tools.ietf.org/html/rfc7231#section-6.6.1)
    badRequest:
      description: HTTP/1.1 ["Bad Request" response status code](https://tools.ietf.org/html/rfc7231#section-6.5.1)
    notFound:
      description: HTTP/1.1 ["Not Found" response status code](https://tools.ietf.org/html/rfc7231#section-6.5.4)
    rangeNotSatisfiable:
      description: HTTP/1.1 ["Range Not Satisfiable" response status code](https://tools.ietf.org/html/rfc7233#section-4.4)
  schemas:
    auth:
      properties:
        password:
          type: string
        resources:
          type: string
        username:
          type: string
      type: object
    addAuthReq:
      $ref: "#/components/schemas/auth"
    authAdded:
      properties:
        auth:
          $ref: "#/components/schemas/auth"
      type: object
    call:
      type: object
      oneOf:
        - properties:
            container:
              properties:
                image:
                  properties:
                    ref:
                      type: string
                  type: object
              type: object
        - properties:
            op:
              type: object
        - properties:
            parallel:
              type: object
        - properties:
            parallelLoop:
              type: object
        - properties:
            serial:
              type: object
        - properties:
            serialLoop:
              type: object
      properties:
        id:
          type: string
        if:
          type: boolean
        isKilled:
          type: boolean
        name:
          type: string
        needs:
          items:
            type: string
          type: array
        parentId:
          type: string
        rootId:
          type: string
    pullCreds:
      description: credentials used during authentication with the source of the op
      required:
        - username
        - password
      properties:
        username:
          type: string
        password:
          type: string
      type: object
    startOpReqArgs:
      type: object
      description: arguments passed to the op to satisfy inputs
      additionalProperties:
        $ref: "#/components/schemas/value"
    startOpReqOp:
      required:
        - ref
      properties:
        ref:
          type: string
          format: uri-reference
          description: reference to an op
        pullCreds:
          $ref: "#/components/schemas/pullCreds"
      type: object
    startOpReq:
      type: object
      properties:
        args:
          $ref: "#/components/schemas/startOpReqArgs"
        op:
          $ref: "#/components/schemas/startOpReqOp"
    value:
      description: a typed value
      oneOf:
        - properties:
            array:
              type: array
              items: {}
        - properties:
            dir:
              description: path
              type: string
        - properties:
            file:
              description: path
              type: string
        - properties:
            number:
              type: number
        - properties:
            object:
              type: object
        - properties:
            socket:
              description: socket address
              type: string
        - properties:
            string:
              type: string
      type: object
    event:
      properties:
        timestamp:
          type: string
          format: dateTime
      oneOf:
        - properties:
            authAdded:
              $ref: "#/components/schemas/authAdded"
        - properties:
            callEnded:
              $ref: "#/components/schemas/callEnded"
        - properties:
            callStarted:
              $ref: "#/components/schemas/callStarted"
        - properties:
            containerStdErrWrittenTo:
              $ref: "#/components/schemas/containerStdErrWrittenTo"
        - properties:
            containerStdOutWrittenTo:
              $ref: "#/components/schemas/containerStdOutWrittenTo"
        - properties:
            callKillRequested:
              $ref: "#/components/schemas/callKillRequested"
      type: object
    callEnded:
      properties:
        call:
          $ref: "#/components/schemas/call"
        error:
          $ref: "#/components/schemas/callEndedError"
        ref:
          type: string
        rootCallId:
          type: string
        outcome:
          enum:
            - SUCCEEDED
            - FAILED
            - KILLED
        outputs:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/value"
      type: object
    callEndedError:
      properties:
        message:
          type: string
      type: object
    callStarted:
      properties:
        call:
          $ref: "#/components/schemas/call"
        ref:
          type: string
        rootCallId:
          type: string
      type: object
    containerStdErrWrittenTo:
      properties:
        imageRef:
          type: string
        data:
          type: string
          format: binary
        rootOpId:
          type: string
        containerId:
          type: string
        opRef:
          type: string
      type: object
    containerStdOutWrittenTo:
      properties:
        imageRef:
          type: string
        data:
          type: string
          format: binary
        rootOpId:
          type: string
        containerId:
          type: string
        opRef:
          type: string
      type: object
    killOpReq:
      properties:
        opId:
          type: string
        rootOpId:
          type: string
      type: object
    callKillRequested:
      properties:
        request:
          $ref: "#/components/schemas/killOpReq"
      type: object
