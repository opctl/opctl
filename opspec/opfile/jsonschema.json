{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Opctl opspec op",
  "description": "Defines an op",
  "definitions": {
    "arrayConstraints": {
      "title": "arrayConstraints",
      "type": "object",
      "properties": {
        "additionalItems": {
          "description": "JSON Schema [additionalItems keyword](https://tools.ietf.org/html/draft-wright-json-schema-validation-01#section-6.10)",
          "$ref": "#/definitions/typeConstraints"
        },
        "items": {
          "description": "JSON Schema [items keyword](https://tools.ietf.org/html/draft-wright-json-schema-validation-01#section-6.9)",
          "anyOf": [
            {
              "$ref": "#/definitions/typeConstraints"
            },
            {
              "items": {
                "$ref": "#/definitions/typeConstraints"
              }
            }
          ]
        },
        "maxItems": {
          "description": "JSON Schema [maxItems keyword](https://tools.ietf.org/html/draft-wright-json-schema-validation-00#section-5.10)",
          "type": "integer",
          "minimum": 0
        },
        "minItems": {
          "description": "JSON Schema [minItems keyword](https://tools.ietf.org/html/draft-wright-json-schema-validation-00#section-5.11)",
          "type": "integer",
          "minimum": 0
        },
        "uniqueItems": {
          "description": "JSON Schema [uniqueItems keyword](https://tools.ietf.org/html/draft-wright-json-schema-validation-01#section-6.13)",
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "arrayExpression": {
      "description": "Expression which evaluates to an array",
      "type": [
        "array",
        "string"
      ]
    },
    "booleanExpression": {
      "description": "Expression which evaluates to a boolean",
      "type": [
        "boolean",
        "string"
      ]
    },
    "expression": {
      "description": "Expression which evaluates to a value",
      "type": [
        "array",
        "boolean",
        "number",
        "object",
        "string"
      ]
    },
    "identifier": {
      "description": "A string safe for use as an identifier",
      "type": "string",
      "pattern": "^[-_a-zA-Z0-9]+$"
    },
    "loopableExpression": {
      "description": "Expression which evaluates to a loopable type (array or object)",
      "type": [
        "array",
        "object",
        "string"
      ]
    },
    "loopRange": {
      "description": "Range of the loop, i.e. the value to loop over",
      "$ref": "#/definitions/loopableExpression"
    },
    "loopVars": {
      "additionalProperties": false,
      "description": "Variables added to scope on each iteration",
      "properties": {
        "index": {
          "description": "Variable each iterations associated index will be made available through",
          "$ref": "#/definitions/variableReference"
        },
        "key": {
          "description": "Variable each iterations associated key will be made available through",
          "$ref": "#/definitions/variableReference"
        },
        "value": {
          "description": "Variable each iterations associated value will be made available through",
          "$ref": "#/definitions/variableReference"
        }
      },
      "type": "object"
    },
    "markdown": {
      "title": "markdown",
      "description": "Markdown in [v0.28 CommonMark syntax](http://spec.commonmark.org/0.28/) including GFM table extension",
      "type": "string"
    },
    "numberConstraints": {
      "title": "numberConstraints",
      "type": "object",
      "properties": {
        "allOf": {
          "description": "JSON Schema [allOf keyword](https://tools.ietf.org/html/draft-wright-json-schema-validation-00#section-5.22)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/numberConstraints"
          }
        },
        "anyOf": {
          "description": "JSON Schema [anyOf keyword](https://tools.ietf.org/html/draft-wright-json-schema-validation-00#section-5.23)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/numberConstraints"
          }
        },
        "enum": {
          "description": "JSON Schema [enum keyword](https://tools.ietf.org/html/draft-wright-json-schema-validation-00#section-5.20)",
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "format": {
          "oneOf": [
            {
              "title": "integer",
              "description": "Requires the number be an integer",
              "type": "string",
              "enum": [
                "integer"
              ]
            }
          ]
        },
        "maximum": {
          "description": "JSON Schema [maximum keyword](https://tools.ietf.org/html/draft-wright-json-schema-validation-00#section-5.2)",
          "type": "number"
        },
        "minimum": {
          "description": "JSON Schema [minimum keyword](https://tools.ietf.org/html/draft-wright-json-schema-validation-00#section-5.4)",
          "type": "number"
        },
        "multipleOf": {
          "description": "JSON Schema [multipleOf keyword](https://tools.ietf.org/html/draft-wright-json-schema-validation-00#section-5.1)",
          "type": "number"
        },
        "not": {
          "description": "JSON Schema [not keyword](https://tools.ietf.org/html/draft-wright-json-schema-validation-00#section-5.25)",
          "$ref": "#/definitions/numberConstraints"
        },
        "oneOf": {
          "description": "JSON Schema [oneOf keyword](https://tools.ietf.org/html/draft-wright-json-schema-validation-00#section-5.24)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/numberConstraints"
          }
        }
      },
      "additionalProperties": false
    },
    "numberExpression": {
      "description": "Expression which evaluates to a number",
      "type": [
        "number",
        "string"
      ]
    },
    "objectConstraints": {
      "title": "objectConstraints",
      "type": "object",
      "properties": {
        "additionalProperties": {
          "description": "JSON Schema [additionalProperties keyword](https://tools.ietf.org/html/draft-handrews-json-schema-validation-00#section-6.5.6)",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "#/definitions/typeConstraints"
            }
          ]
        },
        "allOf": {
          "description": "JSON Schema [allOf keyword](https://tools.ietf.org/html/draft-wright-json-schema-validation-00#section-5.22)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/objectConstraints"
          }
        },
        "anyOf": {
          "description": "JSON Schema [anyOf keyword](https://tools.ietf.org/html/draft-wright-json-schema-validation-00#section-5.23)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/objectConstraints"
          }
        },
        "dependencies": {
          "description": "JSON Schema [dependencies keyword](https://tools.ietf.org/html/draft-wright-json-schema-validation-00#section-5.19)",
          "oneOf": [
            {
              "$ref": "#/definitions/typeConstraints"
            },
            {
              "items": {
                "type": "string"
              }
            }
          ]
        },
        "enum": {
          "description": "JSON Schema [enum keyword](https://tools.ietf.org/html/draft-wright-json-schema-validation-00#section-5.20)",
          "type": "array",
          "items": {
            "type": [
              "null",
              "object"
            ]
          }
        },
        "maxProperties": {
          "description": "JSON Schema [maxProperties keyword](https://tools.ietf.org/html/draft-wright-json-schema-validation-00#section-5.13)",
          "type": "integer",
          "minimum": 0
        },
        "minProperties": {
          "description": "JSON Schema [minProperties keyword](https://tools.ietf.org/html/draft-wright-json-schema-validation-00#section-5.14)",
          "type": "integer",
          "minimum": 0
        },
        "not": {
          "description": "JSON Schema [not keyword](https://tools.ietf.org/html/draft-wright-json-schema-validation-00#section-5.25)",
          "$ref": "#/definitions/objectConstraints"
        },
        "oneOf": {
          "description": "JSON Schema [oneOf keyword](https://tools.ietf.org/html/draft-wright-json-schema-validation-00#section-5.24)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/objectConstraints"
          }
        },
        "properties": {
          "description": "JSON Schema [properties keyword](https://tools.ietf.org/html/draft-wright-json-schema-validation-00#section-5.16)",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/typeConstraints"
          }
        },
        "patternProperties": {
          "description": "JSON Schema [patternProperties keyword](https://tools.ietf.org/html/draft-wright-json-schema-validation-00#section-5.17)",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/typeConstraints"
          }
        },
        "required": {
          "description": "JSON Schema [required keyword](https://tools.ietf.org/html/draft-wright-json-schema-validation-00#section-5.15)",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    },
    "objectExpression": {
      "description": "Expression which evaluates to an object. If provided as an object, property names & values will be interpolated",
      "type": [
        "object",
        "string"
      ]
    },
    "params": {
      "additionalProperties": false,
      "description": "Parameters of an op",
      "patternProperties": {
        "[-_a-zA-Z0-9]+": {
          "oneOf": [
            {
              "required": [
                "array"
              ]
            },
            {
              "required": [
                "boolean"
              ]
            },
            {
              "required": [
                "dir"
              ]
            },
            {
              "required": [
                "file"
              ]
            },
            {
              "required": [
                "number"
              ]
            },
            {
              "required": [
                "object"
              ]
            },
            {
              "required": [
                "socket"
              ]
            },
            {
              "required": [
                "string"
              ]
            }
          ],
          "properties": {
            "array": {
              "additionalProperties": false,
              "description": "Array parameter of an op",
              "properties": {
                "description": {
                  "deprecated": true,
                  "$ref": "#/definitions/markdown"
                },
                "default": {
                  "$ref": "#/definitions/arrayExpression"
                },
                "isSecret": {
                  "description": "If the array is secret",
                  "type": "boolean"
                },
                "constraints": {
                  "$ref": "#/definitions/arrayConstraints"
                }
              },
              "type": "object"
            },
            "boolean": {
              "additionalProperties": false,
              "description": "Boolean parameter of an op",
              "properties": {
                "description": {
                  "deprecated": true,
                  "$ref": "#/definitions/markdown"
                },
                "default": {
                  "$ref": "#/definitions/booleanExpression"
                }
              },
              "type": "object"
            },
            "description": {
              "$ref": "#/definitions/markdown"
            },
            "dir": {
              "additionalProperties": false,
              "description": "Directory parameter of an op",
              "properties": {
                "description": {
                  "deprecated": true,
                  "$ref": "#/definitions/markdown"
                },
                "default": {
                  "description": "Expression coercible to dir value. If value evaluates to a relative path, it will be resolved from the callers current working directory",
                  "$ref": "#/definitions/expression"
                },
                "isSecret": {
                  "description": "If the directory is secret",
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "file": {
              "additionalProperties": false,
              "description": "File parameter of an op",
              "properties": {
                "description": {
                  "deprecated": true,
                  "$ref": "#/definitions/markdown"
                },
                "default": {
                  "description": "Expression coercible to file value. If value evaluates to a relative path, it will be resolved from the callers current working directory",
                  "$ref": "#/definitions/expression"
                },
                "isSecret": {
                  "description": "If the file is secret",
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "number": {
              "additionalProperties": false,
              "description": "Number parameter of an op",
              "properties": {
                "description": {
                  "deprecated": true,
                  "$ref": "#/definitions/markdown"
                },
                "default": {
                  "$ref": "#/definitions/numberExpression"
                },
                "isSecret": {
                  "description": "If the number is secret",
                  "type": "boolean"
                },
                "constraints": {
                  "$ref": "#/definitions/numberConstraints"
                }
              },
              "type": "object"
            },
            "object": {
              "additionalProperties": false,
              "description": "Object parameter of an op",
              "properties": {
                "description": {
                  "deprecated": true,
                  "$ref": "#/definitions/markdown"
                },
                "default": {
                  "$ref": "#/definitions/objectExpression"
                },
                "isSecret": {
                  "description": "If the object is secret",
                  "type": "boolean"
                },
                "constraints": {
                  "$ref": "#/definitions/objectConstraints"
                }
              },
              "type": "object"
            },
            "socket": {
              "additionalProperties": false,
              "description": "Socket parameter of an op",
              "properties": {
                "description": {
                  "deprecated": true,
                  "$ref": "#/definitions/markdown"
                },
                "isSecret": {
                  "description": "If the socket is secret",
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "string": {
              "additionalProperties": false,
              "description": "String parameter of an op",
              "properties": {
                "description": {
                  "deprecated": true,
                  "$ref": "#/definitions/markdown"
                },
                "default": {
                  "$ref": "#/definitions/stringExpression"
                },
                "isSecret": {
                  "description": "If the string is secret",
                  "type": "boolean"
                },
                "constraints": {
                  "$ref": "#/definitions/stringConstraints"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "predicate": {
      "description": "Condition which evaluates to true or false",
      "oneOf": [
        {
          "required": [
            "eq"
          ]
        },
        {
          "required": [
            "exists"
          ]
        },
        {
          "required": [
            "gt"
          ]
        },
        {
          "required": [
            "gte"
          ]
        },
        {
          "required": [
            "lt"
          ]
        },
        {
          "required": [
            "lte"
          ]
        },
        {
          "required": [
            "ne"
          ]
        },
        {
          "required": [
            "notExists"
          ]
        }
      ],
      "properties": {
        "eq": {
          "description": "True if all items are equal",
          "type": "array",
          "items": {
            "description": "Expression coercible to string value",
            "$ref": "#/definitions/expression"
          }
        },
        "exists": {
          "description": "True if value exists w/ reference",
          "$ref": "#/definitions/variableReference"
        },
        "gt": {
          "description": "True if each item is greater than the next",
          "type": "array",
          "items": {
            "description": "Expression coercible to number value",
            "$ref": "#/definitions/expression"
          }
        },
        "gte": {
          "description": "True if each item is greater than or equal to the next",
          "type": "array",
          "items": {
            "description": "Expression coercible to number value",
            "$ref": "#/definitions/expression"
          }
        },
        "lt": {
          "description": "True if each item is less than the next",
          "type": "array",
          "items": {
            "description": "Expression coercible to number value",
            "$ref": "#/definitions/expression"
          }
        },
        "lte": {
          "description": "True if each item is less than or equal to the next",
          "type": "array",
          "items": {
            "description": "Expression coercible to number value",
            "$ref": "#/definitions/expression"
          }
        },
        "ne": {
          "description": "True if any items aren't equal",
          "type": "array",
          "items": {
            "description": "Expression coercible to string value",
            "$ref": "#/definitions/expression"
          }
        },
        "notExists": {
          "description": "True if no value exists w/ reference",
          "$ref": "#/definitions/variableReference"
        }
      },
      "type": "object"
    },
    "pullCreds": {
      "type": "object",
      "description": "Credentials used during authentication with the source of an image or op",
      "properties": {
        "username": {
          "description": "Expression coercible to string value",
          "$ref": "#/definitions/expression"
        },
        "password": {
          "description": "Expression coercible to string value",
          "$ref": "#/definitions/expression"
        }
      },
      "required": [
        "username",
        "password"
      ],
      "additionalProperties": false
    },
    "semVer": {
      "description": "[v2.0.0 semantic version](http://semver.org/spec/v2.0.0.html)",
      "type": "string",
      "pattern": "^([0-9]+)\\.([0-9]+)\\.([0-9]+)(?:(\\-[0-9A-Za-z-]+(?:\\.[0-9A-Za-z-]+)*))?(?:\\+[0-9A-Za-z-\\-\\.]+)?$"
    },
    "stringConstraints": {
      "title": "stringConstraints",
      "type": "object",
      "properties": {
        "allOf": {
          "description": "JSON Schema [allOf keyword](https://tools.ietf.org/html/draft-wright-json-schema-validation-00#section-5.22)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/stringConstraints"
          }
        },
        "anyOf": {
          "description": "JSON Schema [anyOf keyword](https://tools.ietf.org/html/draft-wright-json-schema-validation-00#section-5.23)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/stringConstraints"
          }
        },
        "enum": {
          "description": "JSON Schema [enum keyword](https://tools.ietf.org/html/draft-wright-json-schema-validation-00#section-5.20)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "format": {
          "description": "Superset of JSON Schema [format keyword](https://tools.ietf.org/html/draft-wright-json-schema-validation-00#section-7)",
          "oneOf": [
            {
              "title": "date-time",
              "description": "JSON Schema [date-time format](https://tools.ietf.org/html/draft-wright-json-schema-validation-00#section-7.3.1)",
              "type": "string",
              "enum": [
                "date-time"
              ]
            },
            {
              "title": "docker-image-ref",
              "description": "A docker image reference as defined by [github.com/docker/distribution/reference](https://github.com/docker/distribution/tree/docker/1.13/reference)",
              "type": "string",
              "enum": [
                "docker-image-ref"
              ]
            },
            {
              "title": "email",
              "description": "JSON Schema [email format](https://tools.ietf.org/html/draft-wright-json-schema-validation-00#section-7.3.2)",
              "type": "string",
              "enum": [
                "email"
              ]
            },
            {
              "title": "hostname",
              "description": "JSON Schema [hostname format](https://tools.ietf.org/html/draft-wright-json-schema-validation-00#section-7.3.3)",
              "type": "string",
              "enum": [
                "hostname"
              ]
            },
            {
              "title": "ipv4",
              "description": "JSON Schema [ipv4 format](https://tools.ietf.org/html/draft-wright-json-schema-validation-00#section-7.3.4)",
              "type": "string",
              "enum": [
                "ipv4"
              ]
            },
            {
              "title": "ipv6",
              "description": "JSON Schema [ipv6 format](https://tools.ietf.org/html/draft-wright-json-schema-validation-00#section-7.3.5)",
              "type": "string",
              "enum": [
                "ipv6"
              ]
            },
            {
              "title": "uri",
              "description": "JSON Schema [uri format](https://tools.ietf.org/html/draft-wright-json-schema-validation-00#section-7.3.6)",
              "type": "string",
              "enum": [
                "uri"
              ]
            },
            {
              "title": "semver",
              "description": "A semantic version as defined by [semver.org](http://semver.org/)",
              "type": "string",
              "enum": [
                "semver"
              ]
            }
          ]
        },
        "maxLength": {
          "description": "JSON Schema [maxLength keyword](https://tools.ietf.org/html/draft-wright-json-schema-validation-00#section-5.6)",
          "type": "integer",
          "minimum": 1
        },
        "minLength": {
          "description": "JSON Schema [minLength keyword](https://tools.ietf.org/html/draft-wright-json-schema-validation-00#section-5.7)",
          "type": "integer",
          "minimum": 0,
          "default": 0
        },
        "not": {
          "description": "JSON Schema [not keyword](https://tools.ietf.org/html/draft-wright-json-schema-validation-00#section-5.25)",
          "$ref": "#/definitions/stringConstraints"
        },
        "oneOf": {
          "description": "JSON Schema [oneOf keyword](https://tools.ietf.org/html/draft-wright-json-schema-validation-00#section-5.24)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/stringConstraints"
          }
        },
        "pattern": {
          "description": "JSON Schema [pattern keyword](https://tools.ietf.org/html/draft-wright-json-schema-validation-00#section-5.8)",
          "type": "string",
          "format": "regex"
        }
      },
      "additionalProperties": false
    },
    "stringExpression": {
      "description": "Expression which evaluates to a string",
      "type": [
        "array",
        "boolean",
        "number",
        "object",
        "string"
      ]
    },
    "typeConstraints": {
      "title": "typeConstraints",
      "description": "Parameter constraints",
      "anyOf": [
        {
          "properties": {
            "description": {
              "description": "JSON Schema [description](https://tools.ietf.org/html/draft-wright-json-schema-validation-00#section-6.1)",
              "type": "string"
            },
            "title": {
              "description": "JSON Schema [title](https://tools.ietf.org/html/draft-wright-json-schema-validation-00#section-6.1)",
              "type": "string"
            },
            "type": {
              "description": "JSON Schema [type](https://tools.ietf.org/html/draft-wright-json-schema-validation-00#section-5.21)",
              "type": [
                "array",
                "string"
              ]
            },
            "writeOnly": {
              "description": "JSON Schema [writeOnly](https://tools.ietf.org/html/draft-handrews-json-schema-validation-00#section-10.3)",
              "type": "boolean"
            }
          }
        },
        {
          "$ref": "#/definitions/arrayConstraints"
        },
        {
          "$ref": "#/definitions/numberConstraints"
        },
        {
          "$ref": "#/definitions/objectConstraints"
        },
        {
          "$ref": "#/definitions/stringConstraints"
        }
      ]
    },
    "variableReference": {
      "description": "Reference to a variable",
      "type": "string",
      "pattern": "^\\$\\([-_.a-zA-Z0-9$()[\\/\\]]+\\)$"
    }
  },
  "properties": {
    "name": {
      "description": "Name of the op",
      "type": "string"
    },
    "description": {
      "description": "Description of the op",
      "$ref": "#/definitions/markdown"
    },
    "inputs": {
      "$ref": "#/definitions/params"
    },
    "outputs": {
      "$ref": "#/definitions/params"
    },
    "run": {
      "additionalProperties": false,
      "description": "A single node of the [call graph](https://en.wikipedia.org/wiki/Call_graph)",
      "oneOf": [
        {
          "required": [
            "container"
          ]
        },
        {
          "required": [
            "op"
          ]
        },
        {
          "required": [
            "parallel"
          ]
        },
        {
          "required": [
            "parallelLoop"
          ]
        },
        {
          "required": [
            "serial"
          ]
        },
        {
          "required": [
            "serialLoop"
          ]
        }
      ],
      "properties": {
        "container": {
          "type": "object",
          "properties": {
            "cmd": {
              "description": "Expression coercible to array of strings used as the command run by a container; overrides any set at the image level",
              "$ref": "#/definitions/arrayExpression"
            },
            "dirs": {
              "type": "object",
              "description": "Directories in the container",
              "patternProperties": {
                "^([a-zA-Z]:)?[-_.\\/a-zA-Z0-9]+$": {
                  "oneOf": [
                    {
                      "description": "(will be bound to same path in op)",
                      "type": "null"
                    },
                    {
                      "description": "Expression coercible to dir value &/or scope ref to set upon exit",
                      "$ref": "#/definitions/expression"
                    }
                  ]
                }
              },
              "additionalProperties": false
            },
            "envVars": {
              "oneOf": [
                {
                  "additionalProperties": false,
                  "patternProperties": {
                    "^[^=]+$": {
                      "oneOf": [
                        {
                          "description": "(will be bound to in scope ref w/ same name)",
                          "type": "null"
                        },
                        {
                          "description": "Expression coercible to string value",
                          "$ref": "#/definitions/stringExpression"
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                {
                  "$ref": "#/definitions/variableReference"
                }
              ],
              "description": "Environment variables in the container"
            },
            "files": {
              "type": "object",
              "description": "Files in the container",
              "patternProperties": {
                "^([a-zA-Z]:)?[-_.\\/a-zA-Z0-9]+$": {
                  "oneOf": [
                    {
                      "description": "(will be bound to same path in op)",
                      "type": "null"
                    },
                    {
                      "description": "Expression coercible to file value &/or scope ref to set upon exit",
                      "$ref": "#/definitions/stringExpression"
                    }
                  ]
                }
              },
              "additionalProperties": false
            },
            "image": {
              "type": "object",
              "properties": {
                "ref": {
                  "description": "Image reference to resolve from network.",
                  "$ref": "#/definitions/expression"
                },
                "pullCreds": {
                  "$ref": "#/definitions/pullCreds"
                },
                "src": {
                  "description": "Source of image. MUST be a valid [v1.0.1 OCI (Open Container Initiative) `image-layout`](https://github.com/opencontainers/image-spec/blob/v1.0.1/image-layout.md) directory.",
                  "type": "string"
                }
              },
              "required": [
                "ref"
              ],
              "additionalProperties": false
            },
            "name": {
              "description": "Name the container can be referenced by from other containers",
              "$ref": "#/definitions/stringExpression"
            },
            "ports": {
              "description": "Ports bound from the container to the host",
              "type": "object",
              "patternProperties": {
                "[0-9]+(-[0-9]+)?(tcp|udp)?": {
                  "description": "Host port(s) to bind to",
                  "type": [
                    "string",
                    "number"
                  ],
                  "pattern": "[0-9]+(-[0-9]+)?"
                }
              },
              "additionalProperties": false
            },
            "sockets": {
              "type": "object",
              "patternProperties": {
                "[:a-zA-Z0-9]+": {
                  "description": "Container socket address mapped to a socket ref",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "workDir": {
              "description": "Working directory path (overrides any defined by image)",
              "type": "string"
            }
          },
          "required": [
            "image"
          ],
          "additionalProperties": false
        },
        "description": {
          "$ref": "#/definitions/markdown"
        },
        "if": {
          "description": "If any predicate evaluates to false, the call will be skipped.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/predicate"
          }
        },
        "name": {
          "description": "Name of the current call. Can be used to identify the call from UI's or to list as needed by other calls.",
          "type": "string"
        },
        "needs": {
          "description": "An array of sibling call names which the current call needs. Sibling calls will be killed once no longer needed.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/identifier"
          }
        },
        "op": {
          "type": "object",
          "properties": {
            "inputs": {
              "description": "Initializes INPUT_NAME from VALUE in format 'INPUT_NAME: VALUE'. If VALUE is null, it MUST be assumed VALUE == $(INPUT_NAME)",
              "type": "object",
              "patternProperties": {
                "[-_.a-zA-Z0-9]+": {
                  "oneOf": [
                    {
                      "type": "null"
                    },
                    {
                      "$ref": "#/definitions/expression"
                    }
                  ]
                }
              },
              "additionalProperties": false
            },
            "outputs": {
              "description": "Initializes NAME from OUTPUT_NAME in format 'NAME: OUTPUT_NAME'. If OUTPUT_NAME is null, it MUST be assumed NAME == OUTPUT_NAME",
              "type": "object",
              "patternProperties": {
                "[-_.a-zA-Z0-9]+": {
                  "anyOf": [
                    {
                      "type": "null"
                    },
                    {
                      "deprecated": true,
                      "type": "string",
                      "pattern": "^[-_a-zA-Z0-9]+$"
                    },
                    {
                      "$ref": "#/definitions/variableReference"
                    }
                  ]
                }
              },
              "additionalProperties": false
            },
            "pullCreds": {
              "$ref": "#/definitions/pullCreds"
            },
            "ref": {
              "description": "References the op to run. MUST be a 'git-repo#{SEMVER_GIT_TAG}/path' or 'variable reference' string",
              "type": "string"
            }
          },
          "required": [
            "ref"
          ],
          "additionalProperties": false
        },
        "parallel": {
          "type": "array",
          "items": {
            "$ref": "#/properties/run"
          }
        },
        "parallelLoop": {
          "additionalProperties": false,
          "description": "Loop in which all iterations are called simultaneously.",
          "properties": {
            "range": {
              "$ref": "#/definitions/loopRange"
            },
            "run": {
              "description": "What gets run on each iteration of the loop",
              "$ref": "#/properties/run"
            },
            "vars": {
              "$ref": "#/definitions/loopVars"
            }
          },
          "required": [
            "range",
            "run"
          ],
          "type": "object"
        },
        "serial": {
          "type": "array",
          "items": {
            "$ref": "#/properties/run"
          }
        },
        "serialLoop": {
          "additionalProperties": false,
          "description": "Loop in which each iteration gets called sequentially.",
          "oneOf": [
            {
              "required": [
                "range",
                "run"
              ]
            },
            {
              "required": [
                "until",
                "run"
              ]
            }
          ],
          "properties": {
            "range": {
              "$ref": "#/definitions/loopRange"
            },
            "run": {
              "description": "What gets run on each iteration of the loop",
              "$ref": "#/properties/run"
            },
            "until": {
              "description": "Exit condition of the loop; evaluated before each iteration.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/predicate"
              }
            },
            "vars": {
              "$ref": "#/definitions/loopVars"
            }
          },
          "type": "object"
        }
      }
    },
    "version": {
      "description": "Version of the op",
      "$ref": "#/definitions/semVer"
    },
    "opspec": {
      "description": "Version of [opspec](https://opspec.io) used by the op",
      "$ref": "#/definitions/semVer"
    }
  },
  "required": [
    "name"
  ],
  "additionalProperties": false
}
