name: test
description: runs all tests
inputs:
  githubAccessToken:
    description: accessToken for cloning github.com/opctl/test-suite-auth repo
    string:
      isSecret: true
      constraints:
        minLength: 1
  goBuildCachePath:
    string:
      description: Path relative to HOME dir, to use for go build cache e.g., on macOS, Library/Caches/go-build; on Linux, .cache/go-build
      default: Library/Caches/go-build
  HOME:
    dir:
      description: Home directory of caller; used to access go modules

run:
  parallel:
    # api tests
    - op:
        ref: $(../../api/.opspec/test)
    # CLI tests
    - serial:
        - op:
            ref: $(../../cli/.opspec/test/unit)
            inputs:
              HOME:
        - op:
            ref: $(../../cli/.opspec/test/e2e)
            inputs:
              githubAccessToken:
    # opspec tests
    - op:
        ref: $(../../opspec/opfile/.opspec/test)
    # webapp tests
    - op:
        ref: $(../../webapp/.opspec/test)
    # go SDK tests
    - op:
        ref: $(../../sdks/go/.opspec/test)
        inputs:
          HOME:
    # js SDK tests
    - op:
        ref: $(../../sdks/js/.opspec/test)
    # check go fmt has been run
    - container:
        cmd:
          - sh
          - -ce
          - |
            test -z "\$(gofmt -d -l ./cli ./sdks/go | tee /tmp/output)" || (echo "Fix formatting issues with 'opctl run format'" && cat /tmp/output && exit 1)
        dirs:
          /src: $(../..)
          /go/pkg: $(HOME/go/pkg)
          /root/.cache/go-build: $(HOME/$(goBuildCachePath))
        envVars:
          GOFLAGS: -tags=containers_image_openpgp
        image: { ref: "golang:1.25" }
        workDir: /src
