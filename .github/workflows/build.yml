name: Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  check-for-changelog:
    name: Check for CHANGELOG.md (PR)
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Install Opctl
      run: curl -L https://github.com/opctl/opctl/releases/latest/download/opctl-linux-amd64.tgz | sudo tar -xzv -C /usr/local/bin
    - name: Check for CHANGELOG.md
      run: opctl run changelog/find-in-diff

  lint-changelog:
    name: lint-changelog
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Install Opctl
        run: curl -L https://github.com/opctl/opctl/releases/latest/download/opctl-linux-amd64.tgz | sudo tar -xzv -C /usr/local/bin
      - name: Run Markdownlint
        run: opctl run changelog/lint

  build:
    name: Build
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.ref != 'refs/heads/main'
    steps:
    - name: Check out code
      uses: actions/checkout@v4
    - name: Install Opctl
      run: curl -L https://github.com/opctl/opctl/releases/latest/download/opctl-linux-amd64.tgz | sudo tar -xzv -C /usr/local/bin
      # run: |
      #   curl -LO https://github.com/opctl/opctl/releases/download/v0.1.67-alpha.0/opctl-linux-amd64
      #   chmod +x opctl-linux-amd64
      #   mv opctl-linux-amd64 /usr/local/bin/opctl
    - name: Compile
      run: opctl run -a version=0.0.0 compile
    - name: Test
      run: opctl run test

  create-release:
    name: Release
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: [lint-changelog]
    steps:
    - name: Check out code
      uses: actions/checkout@v4
    - name: Install Opctl
      run: curl -L https://github.com/opctl/opctl/releases/latest/download/opctl-linux-amd64.tgz | sudo tar -xzv -C /usr/local/bin
    - name: Create release from latest changelog entry
      id: create_release
      run: opctl run -a github='{"username":"${{ github.actor }}","accessToken":"${{ github.token }}"}' release
