name: Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  check-for-changelog:
    name: Check for CHANGELOG.md (PR)
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Install Opctl
      run: curl -L https://github.com/opctl/opctl/releases/latest/download/opctl-linux-amd64.tgz | sudo tar -xzv -C /usr/local/bin
    - name: Check for CHANGELOG.md
      run: opctl run changelog/find-in-diff

  lint-changelog:
    name: lint-changelog
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Install Opctl
        run: curl -L https://github.com/opctl/opctl/releases/latest/download/opctl-linux-amd64.tgz | sudo tar -xzv -C /usr/local/bin
      - name: Run Markdownlint
        run: opctl run changelog/lint

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - name: Check out code
      uses: actions/checkout@v4

    - name: Get branch name (push)
      if: github.event_name != 'pull_request'
      shell: bash
      id: branch_name_push
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"

    - name: Get branch name (pull_request)
      if: github.event_name == 'pull_request'
      shell: bash
      id: branch_name_pr
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_HEAD_REF})"

    - name: Install Opctl
      run: curl -L https://github.com/opctl/opctl/releases/latest/download/opctl-linux-amd64.tgz | sudo tar -xzv -C /usr/local/bin

    - run: opctl run -a gitBranch=${{ steps.branch_name_push.outputs.branch }}${{ steps.branch_name_pr.outputs.branch }} -a version=0.0.1 build

  create-release:
    name: Create Draft Release
    runs-on: ubuntu-latest
    needs: [build, lint-changelog]
    steps:
    - name: Check out code
      uses: actions/checkout@v4
    - name: Install Opctl
      run: curl -L https://github.com/opctl/opctl/releases/latest/download/opctl-linux-amd64.tgz | sudo tar -xzv -C /usr/local/bin
    - name: Create Release for latest version
      id: create_release
      run: |
        opctl run -a github='{"username":"${{ github.actor }}", "accessToken": "${{ github.token }}"}' release
