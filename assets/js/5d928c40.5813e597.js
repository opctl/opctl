"use strict";(self.webpackChunkopctl=self.webpackChunkopctl||[]).push([[8814],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),p=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(c.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,l=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=p(n),m=o,f=d["".concat(c,".").concat(m)]||d[m]||s[m]||l;return n?r.createElement(f,a(a({ref:t},u),{},{components:n})):r.createElement(f,a({ref:t},u))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var l=n.length,a=new Array(l);a[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:o,a[1]=i;for(var p=2;p<l;p++)a[p]=n[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8800:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return i},metadata:function(){return p},toc:function(){return s}});var r=n(3117),o=n(102),l=(n(7294),n(3905)),a=["components"],i={title:"Hello World"},c=void 0,p={unversionedId:"training/hello-world",id:"training/hello-world",title:"Hello World",description:"Let's create a simple op to run the essential programming task of greeting the world",source:"@site/docs/training/hello-world.md",sourceDirName:"training",slug:"/training/hello-world",permalink:"/docs/training/hello-world",draft:!1,editUrl:"https://github.com/opctl/opctl/edit/main/website/docs/training/hello-world.md",tags:[],version:"current",lastUpdatedBy:"Chris Dostert",lastUpdatedAt:1587672399,formattedLastUpdatedAt:"Apr 23, 2020",frontMatter:{title:"Hello World"},sidebar:"docs",previous:{title:"Make parts of my op run in a loop",permalink:"/docs/training/flow/make-parts-of-my-op-run-in-a-loop"},next:{title:"Inputs & Outputs",permalink:"/docs/training/inputs-outputs"}},u={},s=[],d={toc:s};function m(e){var t=e.components,n=(0,o.Z)(e,a);return(0,l.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Let's create a simple op to run the essential programming task of greeting the world"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Create a directory named ",(0,l.kt)("inlineCode",{parentName:"li"},"hello-world")),(0,l.kt)("li",{parentName:"ol"},"Inside ",(0,l.kt)("inlineCode",{parentName:"li"},"hello-world")," create a file named ",(0,l.kt)("inlineCode",{parentName:"li"},"op.yml")," with the below contents")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},'# you might want to match the name to the containing directory\'s\nname: hello-world\n\n# describe what your op does using markdown\ndescription: echoes hello world, because we gotta start somewhere\n\nrun:\n\n  # run a container\n  container:\n\n    # use image resolvable via reference alpine:3.6\n    image: { ref: \'alpine:3.6\' }\n\n    # invoke echo w/ arg "hello world"\n    cmd: [ echo, "hello world" ]\n')),(0,l.kt)("ol",{start:3},(0,l.kt)("li",{parentName:"ol"},"verify you're in the right directory by running:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"ls\n")),(0,l.kt)("p",null,"you should see ",(0,l.kt)("inlineCode",{parentName:"p"},"hello-world")),(0,l.kt)("ol",{start:4},(0,l.kt)("li",{parentName:"ol"},"run your hello-world op:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"$ opctl run hello-world\n")),(0,l.kt)("p",null,'You will see the running log of the op, and the glorious "hello world" echoed right before the ',(0,l.kt)("inlineCode",{parentName:"p"},"ContainerExited")," line"))}m.isMDXComponent=!0}}]);