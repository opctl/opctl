"use strict";(self.webpackChunkopctl=self.webpackChunkopctl||[]).push([[3799],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),c=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,p=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=c(n),m=a,f=d["".concat(p,".").concat(m)]||d[m]||s[m]||l;return n?r.createElement(f,o(o({ref:t},u),{},{components:n})):r.createElement(f,o({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,o=new Array(l);o[0]=d;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var c=2;c<l;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},198:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return p},default:function(){return m},frontMatter:function(){return i},metadata:function(){return c},toc:function(){return s}});var r=n(3117),a=n(102),l=(n(7294),n(3905)),o=["components"],i={sidebar_label:"run",title:"opctl run"},p=void 0,c={unversionedId:"reference/cli/run",id:"reference/cli/run",title:"opctl run",description:"Start and wait on an op.",source:"@site/docs/reference/cli/run.md",sourceDirName:"reference/cli",slug:"/reference/cli/run",permalink:"/docs/reference/cli/run",draft:!1,editUrl:"https://github.com/opctl/opctl/edit/main/website/docs/reference/cli/run.md",tags:[],version:"current",lastUpdatedBy:"=",lastUpdatedAt:1639604483,formattedLastUpdatedAt:"Dec 15, 2021",frontMatter:{sidebar_label:"run",title:"opctl run"},sidebar:"docs",previous:{title:"validate",permalink:"/docs/reference/cli/op/validate"},next:{title:"self-update",permalink:"/docs/reference/cli/self-update"}},u={},s=[{value:"Arguments",id:"arguments",level:2},{value:"<code>OP_REF</code>",id:"op_ref",level:3},{value:"Options",id:"options",level:2},{value:"<code>-a</code>",id:"-a",level:3},{value:"<code>--arg-file</code> <em>default: <code>.opspec/args.yml</code></em>",id:"--arg-file-default-opspecargsyml",level:3},{value:"<code>--no-progress</code> <em>default: <code>false</code></em>",id:"--no-progress-default-false",level:3},{value:"Global Options",id:"global-options",level:2},{value:"Examples",id:"examples",level:2},{value:"local op ref w/out args",id:"local-op-ref-wout-args",level:3},{value:"remote op ref w/ args",id:"remote-op-ref-w-args",level:3},{value:"Notes",id:"notes",level:2},{value:"op source username/password prompt",id:"op-source-usernamepassword-prompt",level:3},{value:"input sources",id:"input-sources",level:3},{value:"input prompts",id:"input-prompts",level:3},{value:"validation",id:"validation",level:3},{value:"caching",id:"caching",level:3},{value:"image updates",id:"image-updates",level:3},{value:"container networking",id:"container-networking",level:3},{value:"container cleanup",id:"container-cleanup",level:3}],d={toc:s};function m(e){var t=e.components,n=(0,a.Z)(e,o);return(0,l.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"opctl run [OPTIONS] OP_REF\n")),(0,l.kt)("p",null,"Start and wait on an op."),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"if a node isn't running, one will be started automatically")),(0,l.kt)("h2",{id:"arguments"},"Arguments"),(0,l.kt)("h3",{id:"op_ref"},(0,l.kt)("inlineCode",{parentName:"h3"},"OP_REF")),(0,l.kt)("p",null,"Op reference (either ",(0,l.kt)("inlineCode",{parentName:"p"},"relative/path"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"/absolute/path"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"host/path/repo#tag"),", or ",(0,l.kt)("inlineCode",{parentName:"p"},"host/path/repo#tag/path"),")"),(0,l.kt)("h2",{id:"options"},"Options"),(0,l.kt)("h3",{id:"-a"},(0,l.kt)("inlineCode",{parentName:"h3"},"-a")),(0,l.kt)("p",null,"Explicitly pass args to op in format ",(0,l.kt)("inlineCode",{parentName:"p"},"-a NAME1=VALUE1 -a NAME2=VALUE2")),(0,l.kt)("h3",{id:"--arg-file-default-opspecargsyml"},(0,l.kt)("inlineCode",{parentName:"h3"},"--arg-file")," ",(0,l.kt)("em",{parentName:"h3"},"default: ",(0,l.kt)("inlineCode",{parentName:"em"},".opspec/args.yml"))),(0,l.kt)("p",null,"Read in a file of args in yml format"),(0,l.kt)("h3",{id:"--no-progress-default-false"},(0,l.kt)("inlineCode",{parentName:"h3"},"--no-progress")," ",(0,l.kt)("em",{parentName:"h3"},"default: ",(0,l.kt)("inlineCode",{parentName:"em"},"false"))),(0,l.kt)("p",null,"Disable live call graph for the op"),(0,l.kt)("h2",{id:"global-options"},"Global Options"),(0,l.kt)("p",null,"see ",(0,l.kt)("a",{parentName:"p",href:"/docs/reference/cli/global-options"},"global options")),(0,l.kt)("h2",{id:"examples"},"Examples"),(0,l.kt)("h3",{id:"local-op-ref-wout-args"},"local op ref w/out args"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"opctl run myop\n")),(0,l.kt)("h3",{id:"remote-op-ref-w-args"},"remote op ref w/ args"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},'opctl run -a apiToken="my-token" -a channelName="my-channel" -a msg="hello!" github.com/opspec-pkgs/slack.chat.post-message#0.1.1\n')),(0,l.kt)("h2",{id:"notes"},"Notes"),(0,l.kt)("h3",{id:"op-source-usernamepassword-prompt"},"op source username/password prompt"),(0,l.kt)("p",null,"If auth w/ the op source fails the cli will (re)prompt for username &\npassword."),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"in non-interactive terminals, the cli will note that it can't prompt\ndue to being in a non-interactive terminal and exit with a non zero\nexit code.")),(0,l.kt)("h3",{id:"input-sources"},"input sources"),(0,l.kt)("p",null,"Input sources are checked according to the following precedence:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"arg provided via ",(0,l.kt)("inlineCode",{parentName:"li"},"-a")," option"),(0,l.kt)("li",{parentName:"ul"},"arg file"),(0,l.kt)("li",{parentName:"ul"},"env var"),(0,l.kt)("li",{parentName:"ul"},"default"),(0,l.kt)("li",{parentName:"ul"},"prompt")),(0,l.kt)("h3",{id:"input-prompts"},"input prompts"),(0,l.kt)("p",null,"Inputs which are invalid or missing will result in the cli prompting for\nthem."),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"in non-interactive terminals, the cli will provide details about the\ninvalid or missing input, note that it's giving up due to being in a\nnon-interactive terminal and exit with a non zero exit code.")),(0,l.kt)("p",null,"example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"\n-\n  Please provide value for parameter.\n  Name: version\n  Description: version of app being compiled\n-\n")),(0,l.kt)("h3",{id:"validation"},"validation"),(0,l.kt)("p",null,"When inputs don't meet constraints, the cli will (re)prompt for the\ninput until a satisfactory value is obtained."),(0,l.kt)("h3",{id:"caching"},"caching"),(0,l.kt)("p",null,"All pulled ops/image layers will be cached"),(0,l.kt)("h3",{id:"image-updates"},"image updates"),(0,l.kt)("p",null,"Prior to container creation, updates to the referenced image will be\npulled and applied."),(0,l.kt)("p",null,"If checking for or applying updated image layers fails, graceful\nfallback to cached image layers will occur"),(0,l.kt)("h3",{id:"container-networking"},"container networking"),(0,l.kt)("p",null,"All containers created by opctl will be attached to a single managed\nnetwork."),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"the network is visible from ",(0,l.kt)("inlineCode",{parentName:"p"},"docker network ls")," as ",(0,l.kt)("inlineCode",{parentName:"p"},"opctl"),".")),(0,l.kt)("h3",{id:"container-cleanup"},"container cleanup"),(0,l.kt)("p",null,"Containers will be removed as they exit."))}m.isMDXComponent=!0}}]);