"use strict";(self.webpackChunkopctl=self.webpackChunkopctl||[]).push([[5399],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,p=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),c=s(n),m=a,k=c["".concat(p,".").concat(m)]||c[m]||d[m]||l;return n?r.createElement(k,o(o({ref:t},u),{},{components:n})):r.createElement(k,o({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,o=new Array(l);o[0]=c;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var s=2;s<l;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},3881:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return p},default:function(){return m},frontMatter:function(){return i},metadata:function(){return s},toc:function(){return d}});var r=n(3117),a=n(102),l=(n(7294),n(3905)),o=["components"],i={title:"Bare Metal",sidebar_label:"Bare Metal"},p=void 0,s={unversionedId:"setup/bare-metal",id:"setup/bare-metal",title:"Bare Metal",description:"Installation",source:"@site/docs/setup/bare-metal.md",sourceDirName:"setup",slug:"/setup/bare-metal",permalink:"/docs/setup/bare-metal",draft:!1,editUrl:"https://github.com/opctl/opctl/edit/main/website/docs/setup/bare-metal.md",tags:[],version:"current",lastUpdatedBy:"=",lastUpdatedAt:1660605793,formattedLastUpdatedAt:"Aug 15, 2022",frontMatter:{title:"Bare Metal",sidebar_label:"Bare Metal"},sidebar:"docs",previous:{title:"Azure Pipelines",permalink:"/docs/setup/azure-pipelines"},next:{title:"Docker",permalink:"/docs/setup/docker"}},u={},d=[{value:"Installation",id:"installation",level:2},{value:"Dependencies",id:"dependencies",level:3},{value:"OSX - M1",id:"osx---m1",level:3},{value:"OSX - Intel",id:"osx---intel",level:3},{value:"Linux",id:"linux",level:3},{value:"Windows",id:"windows",level:3},{value:"Upgrading from version 0.1.48 or newer",id:"upgrading-from-version-0148-or-newer",level:2},{value:"Upgrading from version 0.1.47 or older",id:"upgrading-from-version-0147-or-older",level:2},{value:"IDE Plugins",id:"ide-plugins",level:2},{value:"VSCode",id:"vscode",level:3}],c={toc:d};function m(e){var t=e.components,n=(0,a.Z)(e,o);return(0,l.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"installation"},"Installation"),(0,l.kt)("p",null,"opctl is distributed as a self-contained executable, so installation generally consists of:"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Downloading the OS specific binary"),(0,l.kt)("li",{parentName:"ol"},"Adding it to your path")),(0,l.kt)("h3",{id:"dependencies"},"Dependencies"),(0,l.kt)("p",null,"Opctl currently supports multiple container runtimes. Dependencies vary based on whichever you choose:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"container runtime"),(0,l.kt)("th",{parentName:"tr",align:null},"dependencies"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"docker"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://docs.docker.com/get-docker/"},"docker"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"k8s"),(0,l.kt)("td",{parentName:"tr",align:null},"opctl must be running inside k8s (uses the downward API)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"qemu (experimental)"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://github.com/lima-vm/lima/releases/latest"},"lima"))))),(0,l.kt)("h3",{id:"osx---m1"},"OSX - M1"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"curl -L https://github.com/opctl/opctl/releases/latest/download/opctl-darwin-arm64.tgz | sudo tar -xzv -C /usr/local/bin")),(0,l.kt)("h3",{id:"osx---intel"},"OSX - Intel"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"curl -L https://github.com/opctl/opctl/releases/latest/download/opctl-darwin-amd64.tgz | sudo tar -xzv -C /usr/local/bin")),(0,l.kt)("h3",{id:"linux"},"Linux"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"curl -L https://github.com/opctl/opctl/releases/latest/download/opctl-linux-amd64.tgz | sudo tar -xzv -C /usr/local/bin")),(0,l.kt)("h3",{id:"windows"},"Windows"),(0,l.kt)("p",null,"Use ",(0,l.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/windows/wsl/"},"Windows Subsystem for Linux (WSL)")," and the ",(0,l.kt)("a",{parentName:"p",href:"#linux"},"linux install"),"."),(0,l.kt)("h2",{id:"upgrading-from-version-0148-or-newer"},"Upgrading from version 0.1.48 or newer"),(0,l.kt)("p",null,"If you're updating from version 0.1.48 or newer:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"# update to latest release from https://github.com/opctl/opctl/releases\nopctl self-update\n")),(0,l.kt)("h2",{id:"upgrading-from-version-0147-or-older"},"Upgrading from version 0.1.47 or older"),(0,l.kt)("p",null,"In 2021 our ",(0,l.kt)("a",{parentName:"p",href:"https://equinox.io/"},"previous artifact hosting provider")," shut down. If using version 0.1.47 or older, this results in ",(0,l.kt)("inlineCode",{parentName:"p"},"self-update")," finding no updates and mistakenly thinking you're up to date. "),(0,l.kt)("p",null,"To update you must uninstall and reinstall:"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Kill any running node:",(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"opctl node kill\n"))),(0,l.kt)("li",{parentName:"ol"},"Locate your data dir:",(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'# result should include default data dir such as:\n# --data-dir            Path of dir used to store opctl data (env $OPCTL_DATA_DIR) (default "/Users/myusername/Library/Application Support/opctl")\nopctl\n'))),(0,l.kt)("li",{parentName:"ol"},"Delete your data dir:",(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"sudo rm -rf /path/to/opctl/data/dir\n"))),(0,l.kt)("li",{parentName:"ol"},"Follow ",(0,l.kt)("a",{parentName:"li",href:"#installation"},"Installation")," instructions")),(0,l.kt)("h2",{id:"ide-plugins"},"IDE Plugins"),(0,l.kt)("h3",{id:"vscode"},"VSCode"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"install ",(0,l.kt)("a",{parentName:"p",href:"https://marketplace.visualstudio.com/items?itemName=redhat.vscode-yaml"},"vscode-yaml plugin"))),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"add to your user or workspace settings"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-json"},'"yaml.schemas": {\n "https://raw.githubusercontent.com/opctl/opctl/main/opspec/opfile/jsonschema.json": "/op.yml"\n }\n'))),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"edit or create an op.yml w/ your fancy intellisense."))))}m.isMDXComponent=!0}}]);