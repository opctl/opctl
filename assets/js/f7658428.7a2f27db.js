"use strict";(self.webpackChunkopctl=self.webpackChunkopctl||[]).push([[2096],{3905:function(e,r,t){t.d(r,{Zo:function(){return u},kt:function(){return d}});var n=t(7294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=n.createContext({}),p=function(e){var r=n.useContext(c),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},u=function(e){var r=p(e.components);return n.createElement(c.Provider,{value:r},e.children)},s={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},f=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),f=p(t),d=a,m=f["".concat(c,".").concat(d)]||f[d]||s[d]||o;return t?n.createElement(m,i(i({ref:r},u),{},{components:t})):n.createElement(m,i({ref:r},u))}));function d(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=f;var l={};for(var c in r)hasOwnProperty.call(r,c)&&(l[c]=r[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var p=2;p<o;p++)i[p]=t[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}f.displayName="MDXCreateElement"},2005:function(e,r,t){t.r(r),t.d(r,{assets:function(){return u},contentTitle:function(){return c},default:function(){return d},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return s}});var n=t(3117),a=t(102),o=(t(7294),t(3905)),i=["components"],l={title:"Image [object]"},c=void 0,p={unversionedId:"reference/opspec/op-directory/op/call/container/image",id:"reference/opspec/op-directory/op/call/container/image",title:"Image [object]",description:"An object which defines the image of a container call.",source:"@site/docs/reference/opspec/op-directory/op/call/container/image.md",sourceDirName:"reference/opspec/op-directory/op/call/container",slug:"/reference/opspec/op-directory/op/call/container/image",permalink:"/docs/reference/opspec/op-directory/op/call/container/image",draft:!1,editUrl:"https://github.com/opctl/opctl/edit/main/website/docs/reference/opspec/op-directory/op/call/container/image.md",tags:[],version:"current",lastUpdatedBy:"Chris Dostert",lastUpdatedAt:1588264700,formattedLastUpdatedAt:"Apr 30, 2020",frontMatter:{title:"Image [object]"},sidebar:"docs",previous:{title:"Overview",permalink:"/docs/reference/opspec/op-directory/op/call/container/"},next:{title:"Loop Vars [object]",permalink:"/docs/reference/opspec/op-directory/op/call/loop-vars"}},u={},s=[{value:"Properties",id:"properties",level:2},{value:"ref",id:"ref",level:3},{value:"Example ref (docker.io/ubuntu:19.10)",id:"example-ref-dockerioubuntu1910",level:3},{value:"Example ref (variable)",id:"example-ref-variable",level:3},{value:"pullCreds",id:"pullcreds",level:3}],f={toc:s};function d(e){var r=e.components,t=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,n.Z)({},f,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"An object which defines the image of a container call."),(0,o.kt)("h2",{id:"properties"},"Properties"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"must have",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#ref"},"ref")))),(0,o.kt)("li",{parentName:"ul"},"may have",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#pullcreds"},"pullCreds"))))),(0,o.kt)("h3",{id:"ref"},"ref"),(0,o.kt)("p",null,"A string referencing a local or remote image."),(0,o.kt)("p",null,"Must be one of:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"a ",(0,o.kt)("a",{parentName:"li",href:"/docs/reference/opspec/op-directory/op/variable-reference"},"variable-reference [string]")," evaluating to a ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/opencontainers/image-spec/blob/v1.0.1/image-layout.md"},"v1.0.1 OCI (Open Container Initiative) ",(0,o.kt)("inlineCode",{parentName:"a"},"image-layout")),"."),(0,o.kt)("li",{parentName:"ul"},"a ",(0,o.kt)("a",{parentName:"li",href:"/docs/reference/opspec/types/string#initialization"},"string initializer")," evaluating to a docker image name i.e. ",(0,o.kt)("inlineCode",{parentName:"li"},"[host][repository]image[tag]")," where by default host is ",(0,o.kt)("inlineCode",{parentName:"li"},"docker.io")," and tag is ",(0,o.kt)("inlineCode",{parentName:"li"},"latest"))),(0,o.kt)("h3",{id:"example-ref-dockerioubuntu1910"},"Example ref (",(0,o.kt)("a",{parentName:"h3",href:"https://hub.docker.com/_/ubuntu"},"docker.io/ubuntu:19.10"),")"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"ref: 'ubuntu:19.10'")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"ref: 'docker.io/ubuntu:19.10'")),(0,o.kt)("h3",{id:"example-ref-variable"},"Example ref (variable)"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"ref: $(myOCIImageLayoutDir)")),(0,o.kt)("h3",{id:"pullcreds"},"pullCreds"),(0,o.kt)("p",null,"A ",(0,o.kt)("a",{parentName:"p",href:"/docs/reference/opspec/op-directory/op/call/pull-creds"},"pull-creds [object]")," defining creds used to pull the image from a private source."))}d.isMDXComponent=!0}}]);