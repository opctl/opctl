"use strict";(self.webpackChunkopctl=self.webpackChunkopctl||[]).push([[9310],{6532:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>p,frontMatter:()=>l,metadata:()=>o,toc:()=>s});const o=JSON.parse('{"id":"training/flow/conditional-execution","title":"Conditional execution","description":"TLDR;","source":"@site/docs/training/flow/conditional-execution.md","sourceDirName":"training/flow","slug":"/training/flow/conditional-execution","permalink":"/docs/training/flow/conditional-execution","draft":false,"unlisted":false,"editUrl":"https://github.com/opctl/opctl/edit/main/website/docs/training/flow/conditional-execution.md","tags":[],"version":"current","lastUpdatedBy":"=","lastUpdatedAt":1682978842000,"frontMatter":{"title":"Conditional execution"},"sidebar":"docs","previous":{"title":"Container networking","permalink":"/docs/training/containers/container-networking"},"next":{"title":"Serial and parallel execution","permalink":"/docs/training/flow/serial-and-parallel-execution"}}');var i=t(4848),r=t(8453);const l={title:"Conditional execution"},c=void 0,a={},s=[{value:"TLDR;",id:"tldr",level:2},{value:"Example",id:"example",level:2}];function d(e){const n={a:"a",code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"tldr",children:"TLDR;"}),"\n",(0,i.jsxs)(n.p,{children:["Opctl supports using ",(0,i.jsx)(n.a,{href:"/docs/reference/opspec/op-directory/op/call/#if",children:"if"})," statements and ",(0,i.jsx)(n.a,{href:"/docs/reference/opspec/op-directory/op/call/predicate",children:"predicates"})," to make parts of your op run conditionally."]}),"\n",(0,i.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Start this op:","\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"name: conditionalExecution\ninputs:\n  shouldRunContainer:\n    description: whether to run the container or not\n    boolean: {}\nrun:\n  if:\n    - eq: [true, $(shouldRunContainer)]\n  container:\n    cmd: [echo, 'hello!']\n    image: { ref: alpine }\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["When prompted, enter ",(0,i.jsx)(n.code,{children:"true"})," or ",(0,i.jsx)(n.code,{children:"false"})]}),"\n",(0,i.jsxs)(n.li,{children:["Observe you only see the container run and ",(0,i.jsx)(n.code,{children:"hello!"})," logged when you enter ",(0,i.jsx)(n.code,{children:"true"}),"."]}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>c});var o=t(6540);const i={},r=o.createContext(i);function l(e){const n=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),o.createElement(r.Provider,{value:n},e.children)}}}]);