"use strict";(self.webpackChunkopctl=self.webpackChunkopctl||[]).push([[4826],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return f}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function p(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?p(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):p(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},p=Object.keys(e);for(n=0;n<p.length;n++)r=p[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(n=0;n<p.length;n++)r=p[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,p=e.originalType,l=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),d=c(r),f=o,m=d["".concat(l,".").concat(f)]||d[f]||s[f]||p;return r?n.createElement(m,i(i({ref:t},u),{},{components:r})):n.createElement(m,i({ref:t},u))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var p=r.length,i=new Array(p);i[0]=d;var a={};for(var l in t)hasOwnProperty.call(t,l)&&(a[l]=t[l]);a.originalType=e,a.mdxType="string"==typeof e?e:o,i[1]=a;for(var c=2;c<p;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},9781:function(e,t,r){r.r(t),r.d(t,{assets:function(){return u},contentTitle:function(){return l},default:function(){return f},frontMatter:function(){return a},metadata:function(){return c},toc:function(){return s}});var n=r(3117),o=r(102),p=(r(7294),r(3905)),i=["components"],a={sidebar_label:"Overview",title:"Op [object]"},l=void 0,c={unversionedId:"reference/opspec/op-directory/op/index",id:"reference/opspec/op-directory/op/index",title:"Op [object]",description:"An object which defines an operations inputs, outputs, call graph... etc.",source:"@site/docs/reference/opspec/op-directory/op/index.md",sourceDirName:"reference/opspec/op-directory/op",slug:"/reference/opspec/op-directory/op/",permalink:"/docs/reference/opspec/op-directory/op/",draft:!1,editUrl:"https://github.com/opctl/opctl/edit/main/website/docs/reference/opspec/op-directory/op/index.md",tags:[],version:"current",lastUpdatedBy:"Chris Dostert",lastUpdatedAt:1604531186,formattedLastUpdatedAt:"Nov 4, 2020",frontMatter:{sidebar_label:"Overview",title:"Op [object]"},sidebar:"docs",previous:{title:"Overview",permalink:"/docs/reference/opspec/op-directory/"},next:{title:"Overview",permalink:"/docs/reference/opspec/op-directory/op/call/"}},u={},s=[{value:"Properties",id:"properties",level:2},{value:"name",id:"name",level:3},{value:"description",id:"description",level:3},{value:"inputs",id:"inputs",level:3},{value:"outputs",id:"outputs",level:3},{value:"opspec",id:"opspec",level:3},{value:"run",id:"run",level:3},{value:"version",id:"version",level:3}],d={toc:s};function f(e){var t=e.components,r=(0,o.Z)(e,i);return(0,p.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,p.kt)("p",null,"An object which defines an operations inputs, outputs, call graph... etc."),(0,p.kt)("h2",{id:"properties"},"Properties"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},"must have",(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"#name"},"name")))),(0,p.kt)("li",{parentName:"ul"},"may have",(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"#description"},"description")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"#inputs"},"inputs")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"#opspec"},"opspec")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"#outputs"},"outputs")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"#run"},"run")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"#version"},"version"))))),(0,p.kt)("h3",{id:"name"},"name"),(0,p.kt)("p",null,"A string defining a human friendly identifier for the operation."),(0,p.kt)("blockquote",null,(0,p.kt)("p",{parentName:"blockquote"},"It's considered good practice to make ",(0,p.kt)("inlineCode",{parentName:"p"},"name")," unique by using domain\n&/or path based namespacing.")),(0,p.kt)("p",null,"Ops MAY be network resolvable; therefore ",(0,p.kt)("inlineCode",{parentName:"p"},"name")," MUST be a valid\n",(0,p.kt)("a",{parentName:"p",href:"https://tools.ietf.org/html/rfc3986#section-4.1"},"uri-reference")),(0,p.kt)("p",null,"example:"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-yaml"},"name: `github.com/opspec-pkgs/jwt.encode`\n")),(0,p.kt)("h3",{id:"description"},"description"),(0,p.kt)("p",null,"A ",(0,p.kt)("a",{parentName:"p",href:"/docs/reference/opspec/op-directory/op/markdown"},"markdown [string]")," defining a human friendly description of the op (since v0.1.6)."),(0,p.kt)("h3",{id:"inputs"},"inputs"),(0,p.kt)("p",null,"An object defining input parameters of the operation."),(0,p.kt)("p",null,"For each property:"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},"key is an ",(0,p.kt)("a",{parentName:"li",href:"/docs/reference/opspec/op-directory/op/identifier"},"identifier [string]")," defining the name of the input."),(0,p.kt)("li",{parentName:"ul"},"value is a ",(0,p.kt)("a",{parentName:"li",href:"/docs/reference/opspec/op-directory/op/parameter/"},"parameter [object]")," defining the output. ")),(0,p.kt)("h3",{id:"outputs"},"outputs"),(0,p.kt)("p",null,"An object defining output parameters of the operation."),(0,p.kt)("p",null,"For each property:"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},"key is an ",(0,p.kt)("a",{parentName:"li",href:"/docs/reference/opspec/op-directory/op/identifier"},"identifier [string]")," defining the name of the output."),(0,p.kt)("li",{parentName:"ul"},"value is a ",(0,p.kt)("a",{parentName:"li",href:"/docs/reference/opspec/op-directory/op/parameter/"},"parameter [object]")," defining the output.")),(0,p.kt)("h3",{id:"opspec"},"opspec"),(0,p.kt)("p",null,"A ",(0,p.kt)("a",{parentName:"p",href:"https://semver.org/spec/v2.0.0.html"},"semver v2.0.0 [string]")," which defines the version of opspec used to define the operation."),(0,p.kt)("h3",{id:"run"},"run"),(0,p.kt)("p",null,"A ",(0,p.kt)("a",{parentName:"p",href:"/docs/reference/opspec/op-directory/op/call/"},"call [object]")," defining the ops call graph; i.e. what gets run by the operation. "),(0,p.kt)("h3",{id:"version"},"version"),(0,p.kt)("p",null,"A ",(0,p.kt)("a",{parentName:"p",href:"https://semver.org/spec/v2.0.0.html"},"semver v2.0.0 [string]")," which defines the version of the operation. "),(0,p.kt)("blockquote",null,(0,p.kt)("p",{parentName:"blockquote"},"If the op is published remotely, this MUST correspond to a ","[git]"," tag on the containing repo.")))}f.isMDXComponent=!0}}]);