"use strict";(self.webpackChunkopctl=self.webpackChunkopctl||[]).push([[1533],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return d}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),c=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,p=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),m=c(n),d=a,v=m["".concat(p,".").concat(d)]||m[d]||u[d]||l;return n?r.createElement(v,o(o({ref:t},s),{},{components:n})):r.createElement(v,o({ref:t},s))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,o=new Array(l);o[0]=m;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var c=2;c<l;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},4542:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return p},default:function(){return d},frontMatter:function(){return i},metadata:function(){return c},toc:function(){return u}});var r=n(3117),a=n(102),l=(n(7294),n(3905)),o=["components"],i={sidebar_label:"events",title:"opctl events"},p=void 0,c={unversionedId:"reference/cli/events",id:"reference/cli/events",title:"opctl events",description:"Stream events.",source:"@site/docs/reference/cli/events.md",sourceDirName:"reference/cli",slug:"/reference/cli/events",permalink:"/docs/reference/cli/events",draft:!1,editUrl:"https://github.com/opctl/opctl/edit/main/website/docs/reference/cli/events.md",tags:[],version:"current",lastUpdatedBy:"Chris Dostert",lastUpdatedAt:1604531186,formattedLastUpdatedAt:"Nov 4, 2020",frontMatter:{sidebar_label:"events",title:"opctl events"},sidebar:"docs",previous:{title:"add",permalink:"/docs/reference/cli/auth/add"},next:{title:"global-options",permalink:"/docs/reference/cli/global-options"}},s={},u=[{value:"Global Options",id:"global-options",level:2},{value:"Examples",id:"examples",level:2},{value:"Event Replay",id:"event-replay",level:3},{value:"Event Streaming",id:"event-streaming",level:3}],m={toc:u};function d(e){var t=e.components,n=(0,a.Z)(e,o);return(0,l.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"opctl events\n")),(0,l.kt)("p",null,"Stream events."),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"if a node isn't running, one will be automatically created.")),(0,l.kt)("h2",{id:"global-options"},"Global Options"),(0,l.kt)("p",null,"see ",(0,l.kt)("a",{parentName:"p",href:"/docs/reference/cli/global-options"},"global options")),(0,l.kt)("h2",{id:"examples"},"Examples"),(0,l.kt)("h3",{id:"event-replay"},"Event Replay"),(0,l.kt)("p",null,"Events are persisted to disk and can be replayed."),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"events are not held across node restarts; any time a node starts it\nclears its event db.")),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"open terminal & run an op so we have some events"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"opctl run github.com/opspec-pkgs/uuid.v4.generate#1.1.0\n"))),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"exit terminal"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"exit\n"))),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"re open terminal & replay events"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"opctl events\n")))),(0,l.kt)("h3",{id:"event-streaming"},"Event Streaming"),(0,l.kt)("p",null,"Events are streamed in realtime as they occur. They can be streamed in parallel to any number of terminals."),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"behind the scenes, events are delivered over websockets")),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"open multiple terminals & open event stream on each"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"opctl events\n"))),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"open another terminal & run an op; watch events show up on all terminals simultaneously in real-time"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"opctl run some-op\n")))))}d.isMDXComponent=!0}}]);