"use strict";(self.webpackChunkopctl=self.webpackChunkopctl||[]).push([[7443],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return f}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),p=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},u=function(e){var t=p(e.components);return n.createElement(c.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},s=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),s=p(r),f=a,d=s["".concat(c,".").concat(f)]||s[f]||m[f]||i;return r?n.createElement(d,l(l({ref:t},u),{},{components:r})):n.createElement(d,l({ref:t},u))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,l=new Array(i);l[0]=s;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var p=2;p<i;p++)l[p]=r[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}s.displayName="MDXCreateElement"},3366:function(e,t,r){r.r(t),r.d(t,{assets:function(){return u},contentTitle:function(){return c},default:function(){return f},frontMatter:function(){return o},metadata:function(){return p},toc:function(){return m}});var n=r(3117),a=r(102),i=(r(7294),r(3905)),l=["components"],o={title:"Number"},c=void 0,p={unversionedId:"reference/opspec/types/number",id:"reference/opspec/types/number",title:"Number",description:"Number typed values are a number.",source:"@site/docs/reference/opspec/types/number.md",sourceDirName:"reference/opspec/types",slug:"/reference/opspec/types/number",permalink:"/docs/reference/opspec/types/number",draft:!1,editUrl:"https://github.com/opctl/opctl/edit/main/website/docs/reference/opspec/types/number.md",tags:[],version:"current",lastUpdatedBy:"Chris Dostert",lastUpdatedAt:1605586799,formattedLastUpdatedAt:"Nov 17, 2020",frontMatter:{title:"Number"},sidebar:"docs",previous:{title:"File",permalink:"/docs/reference/opspec/types/file"},next:{title:"Object",permalink:"/docs/reference/opspec/types/object"}},u={},m=[{value:"Initialization",id:"initialization",level:3},{value:"Initialization Example (literal)",id:"initialization-example-literal",level:4},{value:"Initialization Example (templated)",id:"initialization-example-templated",level:4},{value:"Coercion",id:"coercion",level:3},{value:"Coercion Example (number to file)",id:"coercion-example-number-to-file",level:4}],s={toc:m};function f(e){var t=e.components,r=(0,a.Z)(e,l);return(0,i.kt)("wrapper",(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Number typed values are a number."),(0,i.kt)("p",null,"Numbers..."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"are immutable, i.e. assigning to an number results in a copy of the original number"),(0,i.kt)("li",{parentName:"ul"},"can be passed in/out of ops via ",(0,i.kt)("a",{parentName:"li",href:"/docs/reference/opspec/op-directory/op/parameter/number"},"number parameters")),(0,i.kt)("li",{parentName:"ul"},"can be initialized via ",(0,i.kt)("a",{parentName:"li",href:"#initialization"},"number initialization")),(0,i.kt)("li",{parentName:"ul"},"are coerced according to ",(0,i.kt)("a",{parentName:"li",href:"#coercion"},"number coercion"))),(0,i.kt)("h3",{id:"initialization"},"Initialization"),(0,i.kt)("p",null,"Number typed values can be constructed from a literal or templated number."),(0,i.kt)("p",null,"A templated number is a number which includes one or more ",(0,i.kt)("a",{parentName:"p",href:"/docs/reference/opspec/op-directory/op/variable-reference"},"variable-reference [string]"),".\nAt runtime, each reference gets evaluated and replaced with it's corresponding value."),(0,i.kt)("h4",{id:"initialization-example-literal"},"Initialization Example (literal)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"2\n")),(0,i.kt)("h4",{id:"initialization-example-templated"},"Initialization Example (templated)"),(0,i.kt)("p",null,"given:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"someNumber"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"is in scope"),(0,i.kt)("li",{parentName:"ul"},"is type coercible to number")))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"# $(someNumber) replaced w/ someNumber\n222$(someNumber)3e10\n")),(0,i.kt)("h3",{id:"coercion"},"Coercion"),(0,i.kt)("p",null,"Number typed values are coercible to:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/reference/opspec/types/boolean"},"boolean")," (numbers which are 0 coerce to false; all else coerce to true)"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/reference/opspec/types/file"},"file")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/reference/opspec/types/string"},"string"))),(0,i.kt)("h4",{id:"coercion-example-number-to-file"},"Coercion Example (number to file)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"name: numAsFile\nrun:\n  container:\n    image: { ref: alpine }\n    cmd:\n    - sh\n    - -ce\n    - cat /numCoercedToFile\n    files:\n      /numCoercedToFile: 2.2\n")))}f.isMDXComponent=!0}}]);