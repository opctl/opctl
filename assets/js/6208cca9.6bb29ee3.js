"use strict";(self.webpackChunkopctl=self.webpackChunkopctl||[]).push([[4667],{5126:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>l,frontMatter:()=>c,metadata:()=>o,toc:()=>a});const o=JSON.parse('{"id":"reference/opspec/op-directory/op/identifier","title":"Identifier [string]","description":"A string safe for use as an identifier. Must match pattern [-_a-zA-Z0-9]+.","source":"@site/docs/reference/opspec/op-directory/op/identifier.md","sourceDirName":"reference/opspec/op-directory/op","slug":"/reference/opspec/op-directory/op/identifier","permalink":"/docs/reference/opspec/op-directory/op/identifier","draft":false,"unlisted":false,"editUrl":"https://github.com/opctl/opctl/edit/main/website/docs/reference/opspec/op-directory/op/identifier.md","tags":[],"version":"current","lastUpdatedBy":"Chris Dostert","lastUpdatedAt":1587672399000,"frontMatter":{"title":"Identifier [string]"},"sidebar":"docs","previous":{"title":"Serial Loop Call [object]","permalink":"/docs/reference/opspec/op-directory/op/call/serial-loop"},"next":{"title":"Initializer [array|boolean|number|string|object]","permalink":"/docs/reference/opspec/op-directory/op/initializer"}}');var n=r(4848),i=r(8453);const c={title:"Identifier [string]"},s=void 0,p={},a=[];function d(e){const t={code:"code",p:"p",...(0,i.R)(),...e.components};return(0,n.jsxs)(t.p,{children:["A string safe for use as an identifier. Must match pattern ",(0,n.jsx)(t.code,{children:"[-_a-zA-Z0-9]+"}),"."]})}function l(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},8453:(e,t,r)=>{r.d(t,{R:()=>c,x:()=>s});var o=r(6540);const n={},i=o.createContext(n);function c(e){const t=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:c(e.components),o.createElement(i.Provider,{value:t},e.children)}}}]);