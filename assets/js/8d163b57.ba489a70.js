"use strict";(self.webpackChunkopctl=self.webpackChunkopctl||[]).push([[2133],{4968:(e,n,l)=>{l.r(n),l.d(n,{assets:()=>s,contentTitle:()=>a,default:()=>p,frontMatter:()=>c,metadata:()=>r,toc:()=>t});const r=JSON.parse('{"id":"reference/opspec/op-directory/op/call/index","title":"Call [object]","description":"An object defining a call in an operations call graph.","source":"@site/docs/reference/opspec/op-directory/op/call/index.md","sourceDirName":"reference/opspec/op-directory/op/call","slug":"/reference/opspec/op-directory/op/call/","permalink":"/docs/reference/opspec/op-directory/op/call/","draft":false,"unlisted":false,"editUrl":"https://github.com/opctl/opctl/edit/main/website/docs/reference/opspec/op-directory/op/call/index.md","tags":[],"version":"current","lastUpdatedBy":"=","lastUpdatedAt":1616514289000,"frontMatter":{"sidebar_label":"Overview","title":"Call [object]"},"sidebar":"docs","previous":{"title":"Overview","permalink":"/docs/reference/opspec/op-directory/op/"},"next":{"title":"Overview","permalink":"/docs/reference/opspec/op-directory/op/call/container/"}}');var i=l(4848),o=l(8453);const c={sidebar_label:"Overview",title:"Call [object]"},a=void 0,s={},t=[{value:"Properties",id:"properties",level:2},{value:"container",id:"container",level:3},{value:"description",id:"description",level:3},{value:"op",id:"op",level:3},{value:"parallel",id:"parallel",level:3},{value:"parallelLoop",id:"parallelloop",level:3},{value:"serial",id:"serial",level:3},{value:"serialLoop",id:"serialloop",level:3},{value:"if",id:"if",level:3},{value:"name",id:"name",level:3},{value:"needs",id:"needs",level:3},{value:"Example Needs (Integration Test)",id:"example-needs-integration-test",level:4}];function d(e){const n={a:"a",blockquote:"blockquote",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"An object defining a call in an operations call graph."}),"\n",(0,i.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["must have exactly one of","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#container",children:"container"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#op",children:"op"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#parallel",children:"parallel"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#parallelloop",children:"parallelLoop"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#serial",children:"serial"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#serialloop",children:"serialLoop"})}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["may have","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#description",children:"description"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#if",children:"if"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#name",children:"name"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#needs",children:"needs"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"container",children:"container"}),"\n",(0,i.jsxs)(n.p,{children:["A ",(0,i.jsx)(n.a,{href:"/docs/reference/opspec/op-directory/op/call/container/",children:"container-call [object]"})," defining a container to run."]}),"\n",(0,i.jsx)(n.h3,{id:"description",children:"description"}),"\n",(0,i.jsxs)(n.p,{children:["A ",(0,i.jsx)(n.a,{href:"/docs/reference/opspec/op-directory/op/markdown",children:"markdown [string]"})," defining a human friendly description of the call."]}),"\n",(0,i.jsx)(n.h3,{id:"op",children:"op"}),"\n",(0,i.jsxs)(n.p,{children:["An ",(0,i.jsx)(n.a,{href:"/docs/reference/opspec/op-directory/op/call/op",children:"op-call [object]"})," defining an op to run."]}),"\n",(0,i.jsx)(n.h3,{id:"parallel",children:"parallel"}),"\n",(0,i.jsxs)(n.p,{children:["An array of ",(0,i.jsx)(n.a,{href:"/docs/reference/opspec/op-directory/op/call/",children:"call [object]"}),"s defining calls run in parallel (all at once without order)."]}),"\n",(0,i.jsx)(n.h3,{id:"parallelloop",children:"parallelLoop"}),"\n",(0,i.jsxs)(n.p,{children:["A ",(0,i.jsx)(n.a,{href:"/docs/reference/opspec/op-directory/op/call/parallel-loop",children:"parallel-loop-call [object]"})," defining a call loop in which all iterations happen in parallel (all at once without order)."]}),"\n",(0,i.jsx)(n.h3,{id:"serial",children:"serial"}),"\n",(0,i.jsxs)(n.p,{children:["An array of ",(0,i.jsx)(n.a,{href:"/docs/reference/opspec/op-directory/op/call/",children:"call [object]"}),"s defining calls run in serial (one after another in order)."]}),"\n",(0,i.jsx)(n.h3,{id:"serialloop",children:"serialLoop"}),"\n",(0,i.jsxs)(n.p,{children:["A ",(0,i.jsx)(n.a,{href:"/docs/reference/opspec/op-directory/op/call/serial-loop",children:"serial-loop-call [object]"})," defining a call loop in which each iteration happens in serial (one after another in order)"]}),"\n",(0,i.jsx)(n.h3,{id:"if",children:"if"}),"\n",(0,i.jsxs)(n.p,{children:["An array of ",(0,i.jsx)(n.a,{href:"/docs/reference/opspec/op-directory/op/call/predicate",children:"predicate [object]"}),"s which must all be true for the call to take place."]}),"\n",(0,i.jsx)(n.h3,{id:"name",children:"name"}),"\n",(0,i.jsxs)(n.p,{children:["An ",(0,i.jsx)(n.a,{href:"/docs/reference/opspec/op-directory/op/identifier",children:"identifier [string]"})," used to identify the call in UI's or ",(0,i.jsx)(n.a,{href:"#needs",children:"needs"})," of sibling calls."]}),"\n",(0,i.jsx)(n.h3,{id:"needs",children:"needs"}),"\n",(0,i.jsxs)(n.p,{children:["An array of ",(0,i.jsx)(n.a,{href:"/docs/reference/opspec/op-directory/op/identifier",children:"identifier [string]"}),"s identifying calls needed by the current call. When the named calls are no longer needed (by this or any other call), they will be killed."]}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"note: needed calls and the current call MUST be children of the same parallel block. If not, the need will be ignored."}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"example-needs-integration-test",children:"Example Needs (Integration Test)"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"name: integration-test\ndescription: systemUnderTest will be shutdown after 1 second because it's no longer needed.\nrun:\n  parallel:\n    - name: systemUnderTest\n      container:\n        image: {ref: alpine}\n        cmd: [sleep, 100000]\n    - container:\n        image: {ref: alpine}\n        cmd: [sleep, 1]\n      needs:\n        - systemUnderTest\n"})})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,l)=>{l.d(n,{R:()=>c,x:()=>a});var r=l(6540);const i={},o=r.createContext(i);function c(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);