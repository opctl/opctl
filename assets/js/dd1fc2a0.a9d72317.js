"use strict";(self.webpackChunkopctl=self.webpackChunkopctl||[]).push([[2627],{3905:function(e,t,r){r.d(t,{Zo:function(){return s},kt:function(){return d}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),c=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},s=function(e){var t=c(e.components);return n.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),m=c(r),d=a,f=m["".concat(p,".").concat(d)]||m[d]||u[d]||i;return r?n.createElement(f,o(o({ref:t},s),{},{components:r})):n.createElement(f,o({ref:t},s))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=m;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var c=2;c<i;c++)o[c]=r[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},2727:function(e,t,r){r.r(t),r.d(t,{assets:function(){return s},contentTitle:function(){return p},default:function(){return d},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return u}});var n=r(3117),a=r(102),i=(r(7294),r(3905)),o=["components"],l={title:"Object"},p=void 0,c={unversionedId:"reference/opspec/types/object",id:"reference/opspec/types/object",title:"Object",description:"Object typed values are a container for string indexed values (referred to as properties).",source:"@site/docs/reference/opspec/types/object.md",sourceDirName:"reference/opspec/types",slug:"/reference/opspec/types/object",permalink:"/docs/reference/opspec/types/object",draft:!1,editUrl:"https://github.com/opctl/opctl/edit/main/website/docs/reference/opspec/types/object.md",tags:[],version:"current",lastUpdatedBy:"Chris Dostert",lastUpdatedAt:1605586799,formattedLastUpdatedAt:"Nov 17, 2020",frontMatter:{title:"Object"},sidebar:"docs",previous:{title:"Number",permalink:"/docs/reference/opspec/types/number"},next:{title:"Socket",permalink:"/docs/reference/opspec/types/socket"}},s={},u=[{value:"Initialization",id:"initialization",level:3},{value:"Initialization Example (literal)",id:"initialization-example-literal",level:4},{value:"Initialization Example (templated)",id:"initialization-example-templated",level:4},{value:"Property Referencing",id:"property-referencing",level:3},{value:"Property Referencing Example (from scope)",id:"property-referencing-example-from-scope",level:4},{value:"Coercion",id:"coercion",level:3},{value:"Coercion Example (object to string)",id:"coercion-example-object-to-string",level:4}],m={toc:u};function d(e){var t=e.components,r=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Object typed values are a container for string indexed values (referred to as properties)."),(0,i.kt)("p",null,"Objects..."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"are immutable, i.e. assigning to an object results in a copy of the original object"),(0,i.kt)("li",{parentName:"ul"},"can be passed in/out of ops via ",(0,i.kt)("a",{parentName:"li",href:"/docs/reference/opspec/op-directory/op/parameter/object"},"object parameters")),(0,i.kt)("li",{parentName:"ul"},"can be initialized via ",(0,i.kt)("a",{parentName:"li",href:"#initialization"},"object initialization")),(0,i.kt)("li",{parentName:"ul"},"properties can be referenced via ",(0,i.kt)("a",{parentName:"li",href:"#property-referencing"},"object property referencing")),(0,i.kt)("li",{parentName:"ul"},"are coerced according to ",(0,i.kt)("a",{parentName:"li",href:"#coercion"},"object coercion"))),(0,i.kt)("h3",{id:"initialization"},"Initialization"),(0,i.kt)("p",null,"Object typed values can be constructed from a literal or templated object."),(0,i.kt)("p",null,"A templated object is an object which includes one or more ",(0,i.kt)("a",{parentName:"p",href:"/docs/reference/opspec/op-directory/op/variable-reference"},"variable-reference [string]"),".\nAt runtime, each reference gets evaluated and replaced with it's corresponding value."),(0,i.kt)("h4",{id:"initialization-example-literal"},"Initialization Example (literal)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"myObject:\n    prop1: value\n")),(0,i.kt)("h4",{id:"initialization-example-templated"},"Initialization Example (templated)"),(0,i.kt)("p",null,"given:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"someDir/file2.txt")," is embedded in op"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"prop2Name")," is in scope"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"someObject"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"is in scope"),(0,i.kt)("li",{parentName:"ul"},"is type coercible to object"),(0,i.kt)("li",{parentName:"ul"},"has property ",(0,i.kt)("inlineCode",{parentName:"li"},"someProperty")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"prop4")," is in scope")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"# interpolate properties\nmyObject:\n    prop1: string $(./someDir/file2.txt)\n    $(prop2Name): $(someObject.someProperty)\n    prop3: [ sub, array, 2]\n    # Shorthand property name; equivalent to prop4: $(prop4)\n    prop4:\n")),(0,i.kt)("h3",{id:"property-referencing"},"Property Referencing"),(0,i.kt)("p",null,"Object properties can be referenced via ",(0,i.kt)("inlineCode",{parentName:"p"},"$(OBJECT.PROPERTY)")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"$(OBJECT[PROPERTY])")," syntax."),(0,i.kt)("h4",{id:"property-referencing-example-from-scope"},"Property Referencing Example (from scope)"),(0,i.kt)("p",null,"given:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"someObject"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"is in scope"),(0,i.kt)("li",{parentName:"ul"},"is type coercible to object"),(0,i.kt)("li",{parentName:"ul"},"contains property ",(0,i.kt)("inlineCode",{parentName:"li"},"someProperty"))))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"$(someObject.someProperty)\n")),(0,i.kt)("h3",{id:"coercion"},"Coercion"),(0,i.kt)("p",null,"Object typed values are coercible to:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/reference/opspec/types/boolean"},"boolean")," (objects which are null or empty coerce to false; all else coerce to true)"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/reference/opspec/types/file"},"file")," (will be serialized to JSON)"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/reference/opspec/types/dir"},"dir")," (will be treated as dir initializer)"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/reference/opspec/types/string"},"string")," (will be serialized to JSON)")),(0,i.kt)("h4",{id:"coercion-example-object-to-string"},"Coercion Example (object to string)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"name: objAsString\ninputs:\n  obj:\n    object:\n      default:\n        prop1: prop1Value\n        prop2: [ item1 ]\nrun:\n  container:\n    image: { ref: alpine }\n    cmd:\n    - echo\n    - $(obj)\n")))}d.isMDXComponent=!0}}]);