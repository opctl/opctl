"use strict";(self.webpackChunkopctl=self.webpackChunkopctl||[]).push([[8118],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),d=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=d(e.components);return a.createElement(p.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=d(n),m=r,k=u["".concat(p,".").concat(m)]||u[m]||s[m]||l;return n?a.createElement(k,o(o({ref:t},c),{},{components:n})):a.createElement(k,o({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,o=new Array(l);o[0]=u;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var d=2;d<l;d++)o[d]=n[d];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},9875:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return p},default:function(){return m},frontMatter:function(){return i},metadata:function(){return d},toc:function(){return s}});var a=n(3117),r=n(102),l=(n(7294),n(3905)),o=["components"],i={},p=void 0,d={unversionedId:"reference/cli/global-options",id:"reference/cli/global-options",title:"global-options",description:"--api-listen-address or OPCTLAPILISTEN_ADDRESS default42224",source:"@site/docs/reference/cli/global-options.md",sourceDirName:"reference/cli",slug:"/reference/cli/global-options",permalink:"/docs/reference/cli/global-options",draft:!1,editUrl:"https://github.com/opctl/opctl/edit/main/website/docs/reference/cli/global-options.md",tags:[],version:"current",lastUpdatedBy:"Chris Dostert",lastUpdatedAt:1730760746,formattedLastUpdatedAt:"Nov 4, 2024",frontMatter:{},sidebar:"docs",previous:{title:"events",permalink:"/docs/reference/cli/events"},next:{title:"ls",permalink:"/docs/reference/cli/ls"}},c={},s=[{value:"<code>--api-listen-address</code> or <code>OPCTL_API_LISTEN_ADDRESS</code> <em>default: 127.0.0.1:42224</em>",id:"--api-listen-address-or-opctl_api_listen_address-default-12700142224",level:2},{value:"Examples",id:"examples",level:3},{value:"<code>--container-runtime</code> or <code>OPCTL_CONTAINER_RUNTIME</code> <em>default: docker</em>",id:"--container-runtime-or-opctl_container_runtime-default-docker",level:2},{value:"Examples",id:"examples-1",level:3},{value:"<code>--data-dir</code> or <code>OPCTL_DATA_DIR</code> <em>default: OS dependent per user app data</em>",id:"--data-dir-or-opctl_data_dir-default-os-dependent-per-user-app-data",level:2},{value:"Examples",id:"examples-2",level:3},{value:"<code>--dns-listen-address</code> or <code>OPCTL_DNS_LISTEN_ADDRESS</code> <em>default: 127.0.0.1:53</em>",id:"--dns-listen-address-or-opctl_dns_listen_address-default-12700153",level:2},{value:"Examples",id:"examples-3",level:3},{value:"<code>-h</code> or <code>--help</code>",id:"-h-or---help",level:2},{value:"Examples",id:"examples-4",level:3},{value:"<code>--nc</code>",id:"--nc",level:2},{value:"Examples",id:"examples-5",level:3},{value:"<code>-v</code> or <code>--version</code>",id:"-v-or---version",level:2},{value:"Examples",id:"examples-6",level:3}],u={toc:s};function m(e){var t=e.components,n=(0,r.Z)(e,o);return(0,l.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"--api-listen-address-or-opctl_api_listen_address-default-12700142224"},(0,l.kt)("inlineCode",{parentName:"h2"},"--api-listen-address")," or ",(0,l.kt)("inlineCode",{parentName:"h2"},"OPCTL_API_LISTEN_ADDRESS")," ",(0,l.kt)("em",{parentName:"h2"},"default: 127.0.0.1:42224")),(0,l.kt)("p",null,"To specify the HOST:PORT on which the opctl API server will listen, include a ",(0,l.kt)("inlineCode",{parentName:"p"},"--api-listen-address")," or set an ",(0,l.kt)("inlineCode",{parentName:"p"},"OPCTL_API_LISTEN_ADDRESS")," env var."),(0,l.kt)("h3",{id:"examples"},"Examples"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"opctl --api-listen-address 0.0.0.0:42224\n")),(0,l.kt)("h2",{id:"--container-runtime-or-opctl_container_runtime-default-docker"},(0,l.kt)("inlineCode",{parentName:"h2"},"--container-runtime")," or ",(0,l.kt)("inlineCode",{parentName:"h2"},"OPCTL_CONTAINER_RUNTIME")," ",(0,l.kt)("em",{parentName:"h2"},"default: docker")),(0,l.kt)("p",null,"To specify the container runtime opctl uses to run containers, include a ",(0,l.kt)("inlineCode",{parentName:"p"},"--container-runtime")," or set an ",(0,l.kt)("inlineCode",{parentName:"p"},"OPCTL_CONTAINER_RUNTIME")," env var."),(0,l.kt)("p",null,"Allowed values are:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"k8s")," (connects to k8s via downward API)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"docker")," (connects to docker via same config as docker client)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"qemu")," (experimental)")),(0,l.kt)("h3",{id:"examples-1"},"Examples"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"opctl --container-runtime qemu\n")),(0,l.kt)("h2",{id:"--data-dir-or-opctl_data_dir-default-os-dependent-per-user-app-data"},(0,l.kt)("inlineCode",{parentName:"h2"},"--data-dir")," or ",(0,l.kt)("inlineCode",{parentName:"h2"},"OPCTL_DATA_DIR")," ",(0,l.kt)("em",{parentName:"h2"},"default: OS dependent per user app data")),(0,l.kt)("p",null,"To specify the path of the directory used to store opctl data, include a ",(0,l.kt)("inlineCode",{parentName:"p"},"--data-dir")," or set an ",(0,l.kt)("inlineCode",{parentName:"p"},"OPCTL_DATA_DIR")," env var.\nto a relative or absolute path. "),(0,l.kt)("h3",{id:"examples-2"},"Examples"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"opctl --data-dir . node create\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"export OPCTL_DATA_DIR=. && opctl node create\n")),(0,l.kt)("h2",{id:"--dns-listen-address-or-opctl_dns_listen_address-default-12700153"},(0,l.kt)("inlineCode",{parentName:"h2"},"--dns-listen-address")," or ",(0,l.kt)("inlineCode",{parentName:"h2"},"OPCTL_DNS_LISTEN_ADDRESS")," ",(0,l.kt)("em",{parentName:"h2"},"default: 127.0.0.1:53")),(0,l.kt)("p",null,"To specify the HOST:PORT on which the opctl DNS server will listen, include a ",(0,l.kt)("inlineCode",{parentName:"p"},"--dns-listen-address")," or set an ",(0,l.kt)("inlineCode",{parentName:"p"},"OPCTL_DNS_LISTEN_ADDRESS")," env var."),(0,l.kt)("h3",{id:"examples-3"},"Examples"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"opctl --dns-listen-address 0.0.0.0:53\n")),(0,l.kt)("h2",{id:"-h-or---help"},(0,l.kt)("inlineCode",{parentName:"h2"},"-h")," or ",(0,l.kt)("inlineCode",{parentName:"h2"},"--help")),(0,l.kt)("p",null,"For context specific help, include a ",(0,l.kt)("inlineCode",{parentName:"p"},"-h")," (or ",(0,l.kt)("inlineCode",{parentName:"p"},"--help"),") flag w/ your command."),(0,l.kt)("h3",{id:"examples-4"},"Examples"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"opctl node create -h\n\nUsage: opctl node create\n\nCreates a node\n")),(0,l.kt)("h2",{id:"--nc"},(0,l.kt)("inlineCode",{parentName:"h2"},"--nc")),(0,l.kt)("p",null,"To disable color, include a ",(0,l.kt)("inlineCode",{parentName:"p"},"--nc")," flag w/ your command."),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"this may increase readability in environments not supporting color escape codes or piping output to another program.")),(0,l.kt)("h3",{id:"examples-5"},"Examples"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"opctl --no-color events\n")),(0,l.kt)("h2",{id:"-v-or---version"},(0,l.kt)("inlineCode",{parentName:"h2"},"-v")," or ",(0,l.kt)("inlineCode",{parentName:"h2"},"--version")),(0,l.kt)("p",null,"To print the version and exit, specify a ",(0,l.kt)("inlineCode",{parentName:"p"},"-v")," (or ",(0,l.kt)("inlineCode",{parentName:"p"},"--version"),") flag."),(0,l.kt)("h3",{id:"examples-6"},"Examples"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"opctl -v\n")))}m.isMDXComponent=!0}}]);