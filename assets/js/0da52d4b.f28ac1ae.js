"use strict";(self.webpackChunkopctl=self.webpackChunkopctl||[]).push([[6653],{9256:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>a,contentTitle:()=>c,default:()=>p,frontMatter:()=>s,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"training/containers/container-networking","title":"Container networking","description":"TLDR;","source":"@site/docs/training/containers/container-networking.md","sourceDirName":"training/containers","slug":"/training/containers/container-networking","permalink":"/docs/training/containers/container-networking","draft":false,"unlisted":false,"editUrl":"https://github.com/opctl/opctl/edit/main/website/docs/training/containers/container-networking.md","tags":[],"version":"current","lastUpdatedBy":"Chris Dostert","lastUpdatedAt":1739222337000,"frontMatter":{"title":"Container networking"},"sidebar":"docs","previous":{"title":"Container execution","permalink":"/docs/training/containers/container-execution"},"next":{"title":"Conditional execution","permalink":"/docs/training/flow/conditional-execution"}}');var o=t(4848),r=t(8453);const s={title:"Container networking"},c=void 0,a={},l=[{value:"TLDR;",id:"tldr",level:2},{value:"Example",id:"example",level:2}];function d(n){const e={a:"a",code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",...(0,r.R)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.h2,{id:"tldr",children:"TLDR;"}),"\n",(0,o.jsx)(e.p,{children:"Opctl attaches all containers to a virtual overlay network and bridges it to the opctl host."}),"\n",(0,o.jsxs)(e.p,{children:["Adding a ",(0,o.jsx)(e.a,{href:"/docs/reference/opspec/op-directory/op/call/container/#name",children:"name"})," attribute to container(s) makes it resolvable from other containers and the host by that name."]}),"\n",(0,o.jsxs)(e.p,{children:["If multiple containers have the same ",(0,o.jsx)(e.a,{href:"/docs/reference/opspec/op-directory/op/call/container/#name",children:"name"})," the ips of all containers will be resolved as is standard for DNS A records."]}),"\n",(0,o.jsx)(e.h2,{id:"example",children:"Example"}),"\n",(0,o.jsxs)(e.ol,{children:["\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"Run this op:"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-yaml",children:"name: containerNetworking\nrun:\nparallel:\n    - container:\n        image: { ref: nginx }\n        # some syntactically valid hostname\n        name: nginx.demo.wow\n    - container:\n        image: { ref: ghcr.io/linuxcontainers/alpine }\n        cmd:\n        - sh\n        - -ce\n        - |\n            # wait up\n            sleep 1; until ping -c1 nginx.demo.wow >/dev/null 2>&1; do :; done\n\n            # ping forever\n            ping nginx.demo.wow\n"})}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsxs)(e.p,{children:["Observe the second container succeeds in ",(0,o.jsx)(e.code,{children:"ping"}),"ing the ",(0,o.jsx)(e.code,{children:"nginx.demo.wow"})," container."]}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsxs)(e.p,{children:["On the opctl host, open a terminal and ",(0,o.jsx)(e.code,{children:"ping nginx.demo.wow"}),"; observe successful pings to the ",(0,o.jsx)(e.code,{children:"nginx.demo.wow"})," container."]}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsxs)(e.p,{children:["On the opctl host, open a browser and visit ",(0,o.jsx)(e.code,{children:"http://nginx.demo.wow"}),"; observe the nginx default webpage is returned."]}),"\n"]}),"\n"]})]})}function p(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(d,{...n})}):d(n)}},8453:(n,e,t)=>{t.d(e,{R:()=>s,x:()=>c});var i=t(6540);const o={},r=i.createContext(o);function s(n){const e=i.useContext(r);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:s(n.components),i.createElement(r.Provider,{value:e},n.children)}}}]);