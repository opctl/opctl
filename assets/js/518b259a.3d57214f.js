"use strict";(self.webpackChunkopctl=self.webpackChunkopctl||[]).push([[3177],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return f}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),c=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(p.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),d=c(r),f=a,m=d["".concat(p,".").concat(f)]||d[f]||s[f]||i;return r?n.createElement(m,l(l({ref:t},u),{},{components:r})):n.createElement(m,l({ref:t},u))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,l=new Array(i);l[0]=d;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var c=2;c<i;c++)l[c]=r[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},9104:function(e,t,r){r.r(t),r.d(t,{assets:function(){return u},contentTitle:function(){return p},default:function(){return f},frontMatter:function(){return o},metadata:function(){return c},toc:function(){return s}});var n=r(3117),a=r(102),i=(r(7294),r(3905)),l=["components"],o={title:"Predicate [object]"},p=void 0,c={unversionedId:"reference/opspec/op-directory/op/call/predicate",id:"reference/opspec/op-directory/op/call/predicate",title:"Predicate [object]",description:"An object defining a condition which evaluates to true or false.",source:"@site/docs/reference/opspec/op-directory/op/call/predicate.md",sourceDirName:"reference/opspec/op-directory/op/call",slug:"/reference/opspec/op-directory/op/call/predicate",permalink:"/docs/reference/opspec/op-directory/op/call/predicate",draft:!1,editUrl:"https://github.com/opctl/opctl/edit/main/website/docs/reference/opspec/op-directory/op/call/predicate.md",tags:[],version:"current",lastUpdatedBy:"=",lastUpdatedAt:1639683922,formattedLastUpdatedAt:"Dec 16, 2021",frontMatter:{title:"Predicate [object]"},sidebar:"docs",previous:{title:"Parallel Loop Call [object]",permalink:"/docs/reference/opspec/op-directory/op/call/parallel-loop"},next:{title:"Pull Creds [object]",permalink:"/docs/reference/opspec/op-directory/op/call/pull-creds"}},u={},s=[{value:"Properties",id:"properties",level:2},{value:"eq",id:"eq",level:3},{value:"exists",id:"exists",level:3},{value:"gt",id:"gt",level:3},{value:"gte",id:"gte",level:3},{value:"lt",id:"lt",level:3},{value:"lte",id:"lte",level:3},{value:"ne",id:"ne",level:3},{value:"notExists",id:"notexists",level:3}],d={toc:s};function f(e){var t=e.components,r=(0,a.Z)(e,l);return(0,i.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"An object defining a condition which evaluates to true or false."),(0,i.kt)("h2",{id:"properties"},"Properties"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"must have exactly one of",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#eq"},"eq")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#exists"},"exists")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#gt"},"gt")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#gte"},"gte")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#lt"},"lt")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#lte"},"lte")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#ne"},"ne")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#notexists"},"notExists"))))),(0,i.kt)("h3",{id:"eq"},"eq"),(0,i.kt)("p",null,"An array defining a predicate, true when all items are equal."),(0,i.kt)("p",null,"Items:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"must be one of",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/reference/opspec/op-directory/op/variable-reference"},"variable-reference [string]")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/reference/opspec/op-directory/op/initializer"},"initializer"))))),(0,i.kt)("h3",{id:"exists"},"exists"),(0,i.kt)("p",null,"A ",(0,i.kt)("a",{parentName:"p",href:"/docs/reference/opspec/op-directory/op/variable-reference"},"variable-reference [string]")," defining a predicate, true when the referenced value exists."),(0,i.kt)("h3",{id:"gt"},"gt"),(0,i.kt)("p",null,"An array defining a predicate, true when each item is greater than the next."),(0,i.kt)("p",null,"Items:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"must be a ",(0,i.kt)("a",{parentName:"li",href:"/docs/reference/opspec/types/number#initialization"},"number initializer"))),(0,i.kt)("h3",{id:"gte"},"gte"),(0,i.kt)("p",null,"An array defining a predicate, true when each item is greater than or equal to the next."),(0,i.kt)("p",null,"Items:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"must be a ",(0,i.kt)("a",{parentName:"li",href:"/docs/reference/opspec/types/number#initialization"},"number initializer"))),(0,i.kt)("h3",{id:"lt"},"lt"),(0,i.kt)("p",null,"An array defining a predicate, true when each item is less than the next."),(0,i.kt)("p",null,"Items:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"must be a ",(0,i.kt)("a",{parentName:"li",href:"/docs/reference/opspec/types/number#initialization"},"number initializer"))),(0,i.kt)("h3",{id:"lte"},"lte"),(0,i.kt)("p",null,"An array defining a predicate, true when each item is less than or equal to the next."),(0,i.kt)("p",null,"Items:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"must be a ",(0,i.kt)("a",{parentName:"li",href:"/docs/reference/opspec/types/number#initialization"},"number initializer"))),(0,i.kt)("h3",{id:"ne"},"ne"),(0,i.kt)("p",null,"An array defining a predicate, true when one or more items aren't equal."),(0,i.kt)("p",null,"Items:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"must be",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/reference/opspec/op-directory/op/variable-reference"},"variable-reference [string]")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/reference/opspec/op-directory/op/initializer"},"initializer"))))),(0,i.kt)("h3",{id:"notexists"},"notExists"),(0,i.kt)("p",null,"A ",(0,i.kt)("a",{parentName:"p",href:"/docs/reference/opspec/op-directory/op/variable-reference"},"variable-reference [string]")," defining a predicate, true when the referenced value doesn't exist."))}f.isMDXComponent=!0}}]);