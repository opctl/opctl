"use strict";(self.webpackChunkopctl=self.webpackChunkopctl||[]).push([[604],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),u=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(c.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=u(n),m=a,f=d["".concat(c,".").concat(m)]||d[m]||s[m]||o;return n?r.createElement(f,l(l({ref:t},p),{},{components:n})):r.createElement(f,l({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var u=2;u<o;u++)l[u]=n[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3137:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return i},metadata:function(){return u},toc:function(){return s}});var r=n(3117),a=n(102),o=(n(7294),n(3905)),l=["components"],i={title:"Azure Pipelines",sidebar_label:"Azure Pipelines"},c=void 0,u={unversionedId:"setup/azure-pipelines",id:"setup/azure-pipelines",title:"Azure Pipelines",description:'The Azure Pipelines "Hosted Linux" agent queue runs dockerized linux agents. The docker socket from the host gets mounted at /var/run/docker.sock inside each agent container, so running opctl is a matter of:',source:"@site/docs/setup/azure-pipelines.md",sourceDirName:"setup",slug:"/setup/azure-pipelines",permalink:"/docs/setup/azure-pipelines",draft:!1,editUrl:"https://github.com/opctl/opctl/edit/main/website/docs/setup/azure-pipelines.md",tags:[],version:"current",lastUpdatedBy:"Cameron Little",lastUpdatedAt:1629389501,formattedLastUpdatedAt:"Aug 19, 2021",frontMatter:{title:"Azure Pipelines",sidebar_label:"Azure Pipelines"},sidebar:"docs",previous:{title:"Introduction",permalink:"/docs/introduction"},next:{title:"Bare Metal",permalink:"/docs/setup/bare-metal"}},p={},s=[{value:"Examples",id:"examples",level:3},{value:"create opctl node task",id:"create-opctl-node-task",level:4},{value:"opctl run task",id:"opctl-run-task",level:4}],d={toc:s};function m(e){var t=e.components,n=(0,a.Z)(e,l);return(0,o.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,'The Azure Pipelines "Hosted Linux" agent queue runs dockerized linux agents. The docker socket from the host gets mounted at ',(0,o.kt)("inlineCode",{parentName:"p"},"/var/run/docker.sock")," inside each agent container, so running opctl is a matter of:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},'choosing "Hosted Linux Preview" for Agent queue'),(0,o.kt)("li",{parentName:"ul"},"adding a task which creates an opctl node w/ a custom data dir (see ",(0,o.kt)("a",{parentName:"li",href:"#create-opctl-node-task"},"create opctl node task"),")"),(0,o.kt)("li",{parentName:"ul"},"adding tasks with your calls to opctl (see ",(0,o.kt)("a",{parentName:"li",href:"#opctl-run-task"},"opctl run task"),")")),(0,o.kt)("h3",{id:"examples"},"Examples"),(0,o.kt)("h4",{id:"create-opctl-node-task"},"create opctl node task"),(0,o.kt)("p",null,'Task: "Shell Script"'),(0,o.kt)("p",null,'Type: "Inline"'),(0,o.kt)("p",null,"Script:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"curl -L https://github.com/opctl/opctl/releases/latest/download/opctl-linux-amd64.tgz | sudo tar -xzv -C /usr/local/bin\n\n# manually create an opctl node.\n# custom node data dir required because VSTS only makes build dir available to docker daemon\n#\n# the node will remain running throughout the build and get used by all tasks calling `opctl run ...`\nnohup opctl node create --data-dir=.opctl &>/dev/null &\n")),(0,o.kt)("h4",{id:"opctl-run-task"},"opctl run task"),(0,o.kt)("p",null,'Task: "Shell Script"'),(0,o.kt)("p",null,'Type: "Inline"'),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"disables color (because vsts doesn't interpret ansi escape codes), & passes an arg ",(0,o.kt)("inlineCode",{parentName:"p"},"someArg"),' to the op from a VSTS "Variable" ',(0,o.kt)("inlineCode",{parentName:"p"},"someArg"))),(0,o.kt)("p",null,'Script: "opctl --nc run -a someArg=$(someArg) some_op"'))}m.isMDXComponent=!0}}]);