"use strict";(self.webpackChunkopctl=self.webpackChunkopctl||[]).push([[5995],{5756:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>s,default:()=>p,frontMatter:()=>r,metadata:()=>l,toc:()=>c});const l=JSON.parse('{"id":"reference/cli/node/kill","title":"kill","description":"opctl node kill","source":"@site/docs/reference/cli/node/kill.md","sourceDirName":"reference/cli/node","slug":"/reference/cli/node/kill","permalink":"/docs/reference/cli/node/kill","draft":false,"unlisted":false,"editUrl":"https://github.com/opctl/opctl/edit/main/website/docs/reference/cli/node/kill.md","tags":[],"version":"current","lastUpdatedBy":"Chris Dostert","lastUpdatedAt":1744401580000,"frontMatter":{"sidebar_label":"kill","hide_title":true},"sidebar":"docs","previous":{"title":"delete","permalink":"/docs/reference/cli/node/delete"},"next":{"title":"op","permalink":"/docs/reference/cli/op/"}}');var i=t(4848),o=t(8453);const r={sidebar_label:"kill",hide_title:!0},s=void 0,d={},c=[{value:"opctl node kill",id:"opctl-node-kill",level:2},{value:"Synopsis",id:"synopsis",level:3},{value:"Options",id:"options",level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:3},{value:"SEE ALSO",id:"see-also",level:3}];function a(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"opctl-node-kill",children:"opctl node kill"}),"\n",(0,i.jsx)(n.p,{children:"Kill an opctl node and any running operations"}),"\n",(0,i.jsx)(n.h3,{id:"synopsis",children:"Synopsis"}),"\n",(0,i.jsx)(n.p,{children:"Killing a node is non destructive. All node data including auth, caches, and operation state will be retained."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"opctl node kill [flags]\n"})}),"\n",(0,i.jsx)(n.h3,{id:"options",children:"Options"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"  -h, --help   help for kill\n"})}),"\n",(0,i.jsx)(n.h3,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'      --api-listen-address string   IP:PORT on which the API server will listen (env $OPCTL_API_LISTEN_ADDRESS) (default "127.0.0.1:42224")\n      --container-runtime string    Runtime for opctl containers. Can be \'docker\' (deprecated), \'k8s\', or \'embedded\' (env $OPCTL_CONTAINER_RUNTIME) (default "docker")\n      --data-dir string             Path of dir used to store opctl data (env $OPCTL_DATA_DIR) (default "/root/opctl")\n      --dns-listen-address string   IP:PORT on which the DNS server will listen (env $OPCTL_DNS_LISTEN_ADDRESS) (default "127.0.0.1:53")\n      --no-color                    Disable output coloring (env $OPCTL_NO_COLOR)\n'})}),"\n",(0,i.jsx)(n.h3,{id:"see-also",children:"SEE ALSO"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"/docs/reference/cli/node/",children:"opctl node"}),"\t - Manage nodes"]}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>s});var l=t(6540);const i={},o=l.createContext(i);function r(e){const n=l.useContext(o);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),l.createElement(o.Provider,{value:n},e.children)}}}]);