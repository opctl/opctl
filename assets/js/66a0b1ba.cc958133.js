"use strict";(self.webpackChunkopctl=self.webpackChunkopctl||[]).push([[457],{3905:function(e,t,r){r.d(t,{Zo:function(){return s},kt:function(){return d}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var p=n.createContext({}),l=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},s=function(e){var t=l(e.components);return n.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,p=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),f=l(r),d=o,m=f["".concat(p,".").concat(d)]||f[d]||u[d]||i;return r?n.createElement(m,a(a({ref:t},s),{},{components:r})):n.createElement(m,a({ref:t},s))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=f;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c.mdxType="string"==typeof e?e:o,a[1]=c;for(var l=2;l<i;l++)a[l]=r[l];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},7805:function(e,t,r){r.r(t),r.d(t,{assets:function(){return s},contentTitle:function(){return p},default:function(){return d},frontMatter:function(){return c},metadata:function(){return l},toc:function(){return u}});var n=r(3117),o=r(102),i=(r(7294),r(3905)),a=["components"],c={sidebar_label:"Overview",title:"Op [directory]"},p=void 0,l={unversionedId:"reference/opspec/op-directory/index",id:"reference/opspec/op-directory/index",title:"Op [directory]",description:"A directory which defines an operation.",source:"@site/docs/reference/opspec/op-directory/index.md",sourceDirName:"reference/opspec/op-directory",slug:"/reference/opspec/op-directory/",permalink:"/docs/reference/opspec/op-directory/",draft:!1,editUrl:"https://github.com/opctl/opctl/edit/main/website/docs/reference/opspec/op-directory/index.md",tags:[],version:"current",lastUpdatedBy:"Chris Dostert",lastUpdatedAt:1604531186,formattedLastUpdatedAt:"Nov 4, 2020",frontMatter:{sidebar_label:"Overview",title:"Op [directory]"},sidebar:"docs",previous:{title:"OpSpec",permalink:"/docs/reference/opspec/"},next:{title:"Overview",permalink:"/docs/reference/opspec/op-directory/op/"}},s={},u=[{value:"Entries",id:"entries",level:2},{value:"icon.svg",id:"iconsvg",level:3},{value:"op.yml",id:"opyml",level:3}],f={toc:u};function d(e){var t=e.components,r=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,n.Z)({},f,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"A directory which defines an operation."),(0,i.kt)("h2",{id:"entries"},"Entries"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"must have",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#opyml"},"op.yml")))),(0,i.kt)("li",{parentName:"ul"},"may have",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#iconsvg"},"icon.svg")),(0,i.kt)("li",{parentName:"ul"},"arbitrary files/directories embedded in the op")))),(0,i.kt)("h3",{id:"iconsvg"},"icon.svg"),(0,i.kt)("p",null,"An optional ",(0,i.kt)("a",{parentName:"p",href:"https://www.w3.org/TR/SVG11/"},"SVG 1.1")," file defining the icon to use when displaying the operation from a user interface. It MUST have a 1:1 aspect ratio (equal height & width)"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"SVG is a vector (as opposed to raster) graphic format; it scales infinitely large/small w/out loss of quality.")),(0,i.kt)("h3",{id:"opyml"},"op.yml"),(0,i.kt)("p",null,"A ",(0,i.kt)("a",{parentName:"p",href:"https://yaml.org/spec/1.2/spec.html"},"YAML 1.2")," file whos content is an ",(0,i.kt)("a",{parentName:"p",href:"/docs/reference/opspec/op-directory/op/"},"op [object]")," defining the operations inputs, outputs, and call graph."))}d.isMDXComponent=!0}}]);