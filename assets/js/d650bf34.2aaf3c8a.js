"use strict";(self.webpackChunkopctl=self.webpackChunkopctl||[]).push([[151],{7227:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"reference/cli/self-update","title":"self-update","description":"opctl self-update","source":"@site/docs/reference/cli/self-update.md","sourceDirName":"reference/cli","slug":"/reference/cli/self-update","permalink":"/docs/reference/cli/self-update","draft":false,"unlisted":false,"editUrl":"https://github.com/opctl/opctl/edit/main/website/docs/reference/cli/self-update.md","tags":[],"version":"current","lastUpdatedBy":"Chris Dostert","lastUpdatedAt":1744401580000,"frontMatter":{"sidebar_label":"self-update","hide_title":true},"sidebar":"docs","previous":{"title":"run","permalink":"/docs/reference/cli/run"},"next":{"title":"ui","permalink":"/docs/reference/cli/ui"}}');var r=n(4848),l=n(8453);const i={sidebar_label:"self-update",hide_title:!0},o=void 0,d={},c=[{value:"opctl self-update",id:"opctl-self-update",level:2},{value:"Synopsis",id:"synopsis",level:3},{value:"Options",id:"options",level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:3},{value:"SEE ALSO",id:"see-also",level:3}];function a(e){const t={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h2,{id:"opctl-self-update",children:"opctl self-update"}),"\n",(0,r.jsx)(t.p,{children:"Update opctl to the latest non pre-release"}),"\n",(0,r.jsx)(t.h3,{id:"synopsis",children:"Synopsis"}),"\n",(0,r.jsx)(t.p,{children:"If a node is running, it will be killed in order to apply the update."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"opctl self-update [flags]\n"})}),"\n",(0,r.jsx)(t.h3,{id:"options",children:"Options"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"  -h, --help   help for self-update\n"})}),"\n",(0,r.jsx)(t.h3,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:'      --api-listen-address string   IP:PORT on which the API server will listen (env $OPCTL_API_LISTEN_ADDRESS) (default "127.0.0.1:42224")\n      --container-runtime string    Runtime for opctl containers. Can be \'docker\' (deprecated), \'k8s\', or \'embedded\' (env $OPCTL_CONTAINER_RUNTIME) (default "docker")\n      --data-dir string             Path of dir used to store opctl data (env $OPCTL_DATA_DIR) (default "/root/opctl")\n      --dns-listen-address string   IP:PORT on which the DNS server will listen (env $OPCTL_DNS_LISTEN_ADDRESS) (default "127.0.0.1:53")\n      --no-color                    Disable output coloring (env $OPCTL_NO_COLOR)\n'})}),"\n",(0,r.jsx)(t.h3,{id:"see-also",children:"SEE ALSO"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.a,{href:"/docs/reference/cli/",children:"opctl"}),"\t - Opctl is a free and open source distributed operation control system"]}),"\n"]})]})}function p(e={}){const{wrapper:t}={...(0,l.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>o});var s=n(6540);const r={},l=s.createContext(r);function i(e){const t=s.useContext(l);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),s.createElement(l.Provider,{value:t},e.children)}}}]);