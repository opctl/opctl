"use strict";(self.webpackChunkopctl=self.webpackChunkopctl||[]).push([[193],{4327:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>o,contentTitle:()=>l,default:()=>p,frontMatter:()=>c,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"reference/opspec/types/file","title":"File","description":"File typed values are a filesystem file entry.","source":"@site/docs/reference/opspec/types/file.md","sourceDirName":"reference/opspec/types","slug":"/reference/opspec/types/file","permalink":"/docs/reference/opspec/types/file","draft":false,"unlisted":false,"editUrl":"https://github.com/opctl/opctl/edit/main/website/docs/reference/opspec/types/file.md","tags":[],"version":"current","lastUpdatedBy":"Chris Dostert","lastUpdatedAt":1587672399000,"frontMatter":{"title":"File"},"sidebar":"docs","previous":{"title":"Dir","permalink":"/docs/reference/opspec/types/dir"},"next":{"title":"Number","permalink":"/docs/reference/opspec/types/number"}}');var s=n(4848),t=n(8453);const c={title:"File"},l=void 0,o={},a=[{value:"Initialization",id:"initialization",level:3},{value:"Coercion",id:"coercion",level:3}];function d(e){const i={a:"a",code:"code",h3:"h3",li:"li",p:"p",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.p,{children:"File typed values are a filesystem file entry."}),"\n",(0,s.jsx)(i.p,{children:"Files..."}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"are mutable, i.e. making changes to a file results in the file being changed everywhere it's referenced"}),"\n",(0,s.jsxs)(i.li,{children:["can be passed in/out of ops via ",(0,s.jsx)(i.a,{href:"/docs/reference/opspec/op-directory/op/parameter/file",children:"file parameters"})]}),"\n",(0,s.jsxs)(i.li,{children:["can be initialized via ",(0,s.jsx)(i.a,{href:"#initialization",children:"file initialization"})]}),"\n",(0,s.jsxs)(i.li,{children:["are coerced according to ",(0,s.jsx)(i.a,{href:"#coercion",children:"file coercion"})]}),"\n"]}),"\n",(0,s.jsx)(i.h3,{id:"initialization",children:"Initialization"}),"\n",(0,s.jsxs)(i.p,{children:["File typed values can be constructed from a literal string or templated string; see ",(0,s.jsx)(i.a,{href:"/docs/reference/opspec/types/string#initialization",children:"string initialization"}),"."]}),"\n",(0,s.jsx)(i.h3,{id:"coercion",children:"Coercion"}),"\n",(0,s.jsx)(i.p,{children:"File typed values are coercible to:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.a,{href:"/docs/reference/opspec/types/boolean",children:"boolean"})," (files which are empty, all ",(0,s.jsx)(i.code,{children:'"0"'}),", or (case insensitive) ",(0,s.jsx)(i.code,{children:'"f"'})," or ",(0,s.jsx)(i.code,{children:'"false"'})," coerce to false; all else coerce to true)"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.a,{href:"/docs/reference/opspec/types/array",children:"array"})," (if value of file is an array in JSON format)"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.a,{href:"/docs/reference/opspec/types/number",children:"number"})," (if value of file is numeric)"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.a,{href:"/docs/reference/opspec/types/object",children:"object"})," (if value of file is an object in JSON format)"]}),"\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.a,{href:"/docs/reference/opspec/types/string",children:"string"})}),"\n"]})]})}function p(e={}){const{wrapper:i}={...(0,t.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,i,n)=>{n.d(i,{R:()=>c,x:()=>l});var r=n(6540);const s={},t=r.createContext(s);function c(e){const i=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function l(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),r.createElement(t.Provider,{value:i},e.children)}}}]);