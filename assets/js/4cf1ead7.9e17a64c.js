"use strict";(self.webpackChunkopctl=self.webpackChunkopctl||[]).push([[1062],{9340:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"reference/cli/events","title":"events","description":"opctl events","source":"@site/docs/reference/cli/events.md","sourceDirName":"reference/cli","slug":"/reference/cli/events","permalink":"/docs/reference/cli/events","draft":false,"unlisted":false,"editUrl":"https://github.com/opctl/opctl/edit/main/website/docs/reference/cli/events.md","tags":[],"version":"current","lastUpdatedBy":"Chris Dostert","lastUpdatedAt":1744401580000,"frontMatter":{"sidebar_label":"events","hide_title":true},"sidebar":"docs","previous":{"title":"add","permalink":"/docs/reference/cli/auth/add"},"next":{"title":"ls","permalink":"/docs/reference/cli/ls"}}');var r=t(4848),o=t(8453);const i={sidebar_label:"events",hide_title:!0},l=void 0,c={},d=[{value:"opctl events",id:"opctl-events",level:2},{value:"Synopsis",id:"synopsis",level:3},{value:"Options",id:"options",level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:3},{value:"SEE ALSO",id:"see-also",level:3}];function a(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"opctl-events",children:"opctl events"}),"\n",(0,r.jsx)(n.p,{children:"Stream events from an opctl node"}),"\n",(0,r.jsx)(n.h3,{id:"synopsis",children:"Synopsis"}),"\n",(0,r.jsx)(n.p,{children:"If an opctl node isn't reachable, one will be started automatically. Events are delivered\nover a websocket connection. Past events are replayed when streaming starts. As new\nevents occur, they are streamed in realtime."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"opctl events [flags]\n"})}),"\n",(0,r.jsx)(n.h3,{id:"options",children:"Options"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"  -h, --help   help for events\n"})}),"\n",(0,r.jsx)(n.h3,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'      --api-listen-address string   IP:PORT on which the API server will listen (env $OPCTL_API_LISTEN_ADDRESS) (default "127.0.0.1:42224")\n      --container-runtime string    Runtime for opctl containers. Can be \'docker\' (deprecated), \'k8s\', or \'embedded\' (env $OPCTL_CONTAINER_RUNTIME) (default "docker")\n      --data-dir string             Path of dir used to store opctl data (env $OPCTL_DATA_DIR) (default "/root/opctl")\n      --dns-listen-address string   IP:PORT on which the DNS server will listen (env $OPCTL_DNS_LISTEN_ADDRESS) (default "127.0.0.1:53")\n      --no-color                    Disable output coloring (env $OPCTL_NO_COLOR)\n'})}),"\n",(0,r.jsx)(n.h3,{id:"see-also",children:"SEE ALSO"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/docs/reference/cli/",children:"opctl"}),"\t - Opctl is a free and open source distributed operation control system"]}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>l});var s=t(6540);const r={},o=s.createContext(r);function i(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);