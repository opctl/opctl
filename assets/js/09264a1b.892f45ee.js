"use strict";(self.webpackChunkopctl=self.webpackChunkopctl||[]).push([[4362],{2610:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>l,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"reference/cli/ls","title":"ls","description":"opctl ls","source":"@site/docs/reference/cli/ls.md","sourceDirName":"reference/cli","slug":"/reference/cli/ls","permalink":"/docs/reference/cli/ls","draft":false,"unlisted":false,"editUrl":"https://github.com/opctl/opctl/edit/main/website/docs/reference/cli/ls.md","tags":[],"version":"current","lastUpdatedBy":"Chris Dostert","lastUpdatedAt":1744401580000,"frontMatter":{"sidebar_label":"ls","hide_title":true},"sidebar":"docs","previous":{"title":"events","permalink":"/docs/reference/cli/events"},"next":{"title":"node","permalink":"/docs/reference/cli/node/"}}');var o=n(4848),r=n(8453);const l={sidebar_label:"ls",hide_title:!0},i=void 0,c={},d=[{value:"opctl ls",id:"opctl-ls",level:2},{value:"Synopsis",id:"synopsis",level:3},{value:"Examples",id:"examples",level:3},{value:"Options",id:"options",level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:3},{value:"SEE ALSO",id:"see-also",level:3}];function a(e){const t={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h2,{id:"opctl-ls",children:"opctl ls"}),"\n",(0,o.jsx)(t.p,{children:"List operations"}),"\n",(0,o.jsx)(t.h3,{id:"synopsis",children:"Synopsis"}),"\n",(0,o.jsx)(t.p,{children:"DIR_REF can be either a 'relative/path', '/absolute/path', 'host/repo-path#tag', or 'host/repo-path#tag/path'."}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:"opctl ls [DIR_REF] [flags]\n"})}),"\n",(0,o.jsx)(t.h3,{id:"examples",children:"Examples"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:"# List all ops defined in the '.opspec' directory of the current working directory.\nopctl ls\n\n# List all ops defined in the .opspec directory of the 'github.com/opctl/opctl' git repository commit tagged '0.1.71'.\nopctl ls github.com/opctl/opctl#0.1.71\n\n"})}),"\n",(0,o.jsx)(t.h3,{id:"options",children:"Options"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:"  -h, --help   help for ls\n"})}),"\n",(0,o.jsx)(t.h3,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:'      --api-listen-address string   IP:PORT on which the API server will listen (env $OPCTL_API_LISTEN_ADDRESS) (default "127.0.0.1:42224")\n      --container-runtime string    Runtime for opctl containers. Can be \'docker\' (deprecated), \'k8s\', or \'embedded\' (env $OPCTL_CONTAINER_RUNTIME) (default "docker")\n      --data-dir string             Path of dir used to store opctl data (env $OPCTL_DATA_DIR) (default "/root/opctl")\n      --dns-listen-address string   IP:PORT on which the DNS server will listen (env $OPCTL_DNS_LISTEN_ADDRESS) (default "127.0.0.1:53")\n      --no-color                    Disable output coloring (env $OPCTL_NO_COLOR)\n'})}),"\n",(0,o.jsx)(t.h3,{id:"see-also",children:"SEE ALSO"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.a,{href:"/docs/reference/cli/",children:"opctl"}),"\t - Opctl is a free and open source distributed operation control system"]}),"\n"]})]})}function p(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(a,{...e})}):a(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>l,x:()=>i});var s=n(6540);const o={},r=s.createContext(o);function l(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:l(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);