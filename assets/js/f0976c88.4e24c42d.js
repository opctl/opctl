"use strict";(self.webpackChunkopctl=self.webpackChunkopctl||[]).push([[966],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return m}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var i=n.createContext({}),c=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(i.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,l=e.originalType,i=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),d=c(r),m=a,f=d["".concat(i,".").concat(m)]||d[m]||s[m]||l;return r?n.createElement(f,o(o({ref:t},u),{},{components:r})):n.createElement(f,o({ref:t},u))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=r.length,o=new Array(l);o[0]=d;var p={};for(var i in t)hasOwnProperty.call(t,i)&&(p[i]=t[i]);p.originalType=e,p.mdxType="string"==typeof e?e:a,o[1]=p;for(var c=2;c<l;c++)o[c]=r[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},8704:function(e,t,r){r.r(t),r.d(t,{assets:function(){return u},contentTitle:function(){return i},default:function(){return m},frontMatter:function(){return p},metadata:function(){return c},toc:function(){return s}});var n=r(3117),a=r(102),l=(r(7294),r(3905)),o=["components"],p={title:"Op Call [object]"},i=void 0,c={unversionedId:"reference/opspec/op-directory/op/call/op",id:"reference/opspec/op-directory/op/call/op",title:"Op Call [object]",description:"An object defining an op call.",source:"@site/docs/reference/opspec/op-directory/op/call/op.md",sourceDirName:"reference/opspec/op-directory/op/call",slug:"/reference/opspec/op-directory/op/call/op",permalink:"/docs/reference/opspec/op-directory/op/call/op",draft:!1,editUrl:"https://github.com/opctl/opctl/edit/main/website/docs/reference/opspec/op-directory/op/call/op.md",tags:[],version:"current",lastUpdatedBy:"Chris Dostert",lastUpdatedAt:1605586799,formattedLastUpdatedAt:"Nov 17, 2020",frontMatter:{title:"Op Call [object]"},sidebar:"docs",previous:{title:"Loop Vars [object]",permalink:"/docs/reference/opspec/op-directory/op/call/loop-vars"},next:{title:"Parallel Loop Call [object]",permalink:"/docs/reference/opspec/op-directory/op/call/parallel-loop"}},u={},s=[{value:"Properties",id:"properties",level:2},{value:"ref",id:"ref",level:3},{value:"Example ref (github.com/opspec-pkgs/golang.build.bin#2.0.0)",id:"example-ref-githubcomopspec-pkgsgolangbuildbin200",level:3},{value:"pullCreds",id:"pullcreds",level:3},{value:"inputs",id:"inputs",level:3},{value:"outputs",id:"outputs",level:3}],d={toc:s};function m(e){var t=e.components,r=(0,a.Z)(e,o);return(0,l.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"An object defining an op call."),(0,l.kt)("h2",{id:"properties"},"Properties"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"must have",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#ref"},"ref")))),(0,l.kt)("li",{parentName:"ul"},"may have",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#inputs"},"inputs")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#outputs"},"outputs")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#pullcreds"},"pullCreds"))))),(0,l.kt)("h3",{id:"ref"},"ref"),(0,l.kt)("p",null,"A string referencing a local or remote operation."),(0,l.kt)("p",null,"Must be one of:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"a ",(0,l.kt)("a",{parentName:"li",href:"/docs/reference/opspec/op-directory/op/variable-reference"},"variable-reference [string]")," evaluating to an ",(0,l.kt)("a",{parentName:"li",href:"/docs/reference/opspec/op-directory/"},"op [directory]")),(0,l.kt)("li",{parentName:"ul"},"a relative path referencing an op existing on the same local filesystem."),(0,l.kt)("li",{parentName:"ul"},"a string in ",(0,l.kt)("inlineCode",{parentName:"li"},"git-repo#{SEMVER_GIT_TAG}/path")," format referencing a network resolvable op.")),(0,l.kt)("h3",{id:"example-ref-githubcomopspec-pkgsgolangbuildbin200"},"Example ref (",(0,l.kt)("a",{parentName:"h3",href:"https://github.com/opspec-pkgs/golang.build.bin"},"github.com/opspec-pkgs/golang.build.bin#2.0.0"),")"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"ref: 'github.com/opspec-pkgs/golang.build.bin#2.0.0'")),(0,l.kt)("h3",{id:"pullcreds"},"pullCreds"),(0,l.kt)("p",null,"A ",(0,l.kt)("a",{parentName:"p",href:"/docs/reference/opspec/op-directory/op/call/pull-creds"},"pull-creds [object]")," defining creds used to pull the op from a private source."),(0,l.kt)("h3",{id:"inputs"},"inputs"),(0,l.kt)("p",null,"An object for which each key is an input of the referenced op and the value is one of:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"value"),(0,l.kt)("th",{parentName:"tr",align:null},"meaning"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"null"),(0,l.kt)("td",{parentName:"tr",align:null},"Bind input to variable w/ same name (equivalent to ",(0,l.kt)("inlineCode",{parentName:"td"},"$(INPUT_NAME)"),")")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/docs/reference/opspec/op-directory/op/variable-reference"},"variable-reference [string]")),(0,l.kt)("td",{parentName:"tr",align:null},"Bind referenced variable to the named input")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/docs/reference/opspec/op-directory/op/initializer"},"initializer")),(0,l.kt)("td",{parentName:"tr",align:null},"Evaluate and bind to the named input")))),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"This is equivalent to providing named arguments to a function in modern programming languages.")),(0,l.kt)("h3",{id:"outputs"},"outputs"),(0,l.kt)("p",null,"An object for which each key is an output of the referenced op and the value is one of:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"value"),(0,l.kt)("th",{parentName:"tr",align:null},"meaning"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"null"),(0,l.kt)("td",{parentName:"tr",align:null},"Bind variable to output w/ same name (equivalent to ",(0,l.kt)("inlineCode",{parentName:"td"},"$(OUTPUT_NAME)"),")")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/docs/reference/opspec/op-directory/op/variable-reference"},"variable-reference [string]")),(0,l.kt)("td",{parentName:"tr",align:null},"Bind named output to referenced variable")))),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"This is equivalent to consuming named return values from a function in modern programming languages.")))}m.isMDXComponent=!0}}]);