"use strict";(self.webpackChunkopctl=self.webpackChunkopctl||[]).push([[7188],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return d}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function c(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function p(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?c(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},c=Object.keys(e);for(n=0;n<c.length;n++)r=c[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(n=0;n<c.length;n++)r=c[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var i=n.createContext({}),s=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):p(p({},t),e)),r},u=function(e){var t=s(e.components);return n.createElement(i.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,c=e.originalType,i=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),f=s(r),d=o,m=f["".concat(i,".").concat(d)]||f[d]||l[d]||c;return r?n.createElement(m,p(p({ref:t},u),{},{components:r})):n.createElement(m,p({ref:t},u))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var c=r.length,p=new Array(c);p[0]=f;var a={};for(var i in t)hasOwnProperty.call(t,i)&&(a[i]=t[i]);a.originalType=e,a.mdxType="string"==typeof e?e:o,p[1]=a;for(var s=2;s<c;s++)p[s]=r[s];return n.createElement.apply(null,p)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},300:function(e,t,r){r.r(t),r.d(t,{assets:function(){return u},contentTitle:function(){return i},default:function(){return d},frontMatter:function(){return a},metadata:function(){return s},toc:function(){return l}});var n=r(3117),o=r(102),c=(r(7294),r(3905)),p=["components"],a={title:"Socket"},i=void 0,s={unversionedId:"reference/opspec/types/socket",id:"reference/opspec/types/socket",title:"Socket",description:"Socket typed values hold one endpoint of a two way communication i.e. network/unix sockets, named-pipes etc...",source:"@site/docs/reference/opspec/types/socket.md",sourceDirName:"reference/opspec/types",slug:"/reference/opspec/types/socket",permalink:"/docs/reference/opspec/types/socket",draft:!1,editUrl:"https://github.com/opctl/opctl/edit/main/website/docs/reference/opspec/types/socket.md",tags:[],version:"current",lastUpdatedBy:"Chris Dostert",lastUpdatedAt:1587672399,formattedLastUpdatedAt:"Apr 23, 2020",frontMatter:{title:"Socket"},sidebar:"docs",previous:{title:"Object",permalink:"/docs/reference/opspec/types/object"},next:{title:"String",permalink:"/docs/reference/opspec/types/string"}},u={},l=[],f={toc:l};function d(e){var t=e.components,r=(0,o.Z)(e,p);return(0,c.kt)("wrapper",(0,n.Z)({},f,r,{components:t,mdxType:"MDXLayout"}),(0,c.kt)("p",null,"Socket typed values hold one endpoint of a two way communication i.e. network/unix sockets, named-pipes etc..."),(0,c.kt)("p",null,"Sockets..."),(0,c.kt)("ul",null,(0,c.kt)("li",{parentName:"ul"},"are immutable, i.e. assigning to an socket results in a copy of the original socket"),(0,c.kt)("li",{parentName:"ul"},"can be passed in/out of ops via ",(0,c.kt)("a",{parentName:"li",href:"/docs/reference/opspec/op-directory/op/parameter/socket"},"socket parameters"))))}d.isMDXComponent=!0}}]);